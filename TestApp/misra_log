14:38:58 **** Build of configuration Release for project TestApp ****
make all 
Building file: ../SinglyLinkedListTest.c
Invoking: GCC C Compiler
gcc -I"/home/rtrk/workspace/SinglyLinkedList" -includeSinglyLinkedList.h -O3 -Wall -c -fmessage-length=0 -fPIC -MMD -MP -MF"SinglyLinkedListTest.d" -MT"SinglyLinkedListTest.o" -o "SinglyLinkedListTest.o" "../SinglyLinkedListTest.c"
Finished building: ../SinglyLinkedListTest.c
 
Building file: ../main.c
Invoking: GCC C Compiler
gcc -I"/home/rtrk/workspace/SinglyLinkedList" -includeSinglyLinkedList.h -O3 -Wall -c -fmessage-length=0 -fPIC -MMD -MP -MF"main.d" -MT"main.o" -o "main.o" "../main.c"
Finished building: ../main.c
 
Building file: ../unity.c
Invoking: GCC C Compiler
gcc -I"/home/rtrk/workspace/SinglyLinkedList" -includeSinglyLinkedList.h -O3 -Wall -c -fmessage-length=0 -fPIC -MMD -MP -MF"unity.d" -MT"unity.o" -o "unity.o" "../unity.c"
Finished building: ../unity.c
 
Building target: TestApp
Invoking: GCC C Linker
gcc  -o "TestApp"  ./SinglyLinkedListTest.o ./main.o ./unity.o    -L"/home/rtrk/workspace/SinglyLinkedList/Debug" -ldl
Finished building target: TestApp
 
make --no-print-directory post-build
/home/rtrk/Downloads/c6000_7.4.23/bin/cl6x --include_path=/home/rtrk/Downloads/c6000_7.4.23/include --compile_only --check_misra=all  ../SinglyLinkedListTest.c ../main.c ../unity.c 
[SinglyLinkedListTest.c]
"/home/rtrk/Downloads/c6000_7.4.23/include/features.h", line 101: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/features.h", line 102: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/features.h", line 103: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/features.h", line 104: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/features.h", line 105: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/features.h", line 106: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/features.h", line 107: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/features.h", line 108: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/features.h", line 109: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/features.h", line 110: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/features.h", line 111: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/features.h", line 112: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/features.h", line 113: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/features.h", line 114: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/features.h", line 115: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/features.h", line 116: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/features.h", line 117: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/features.h", line 118: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/features.h", line 119: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/features.h", line 120: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/features.h", line 121: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/features.h", line 122: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/features.h", line 123: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/features.h", line 124: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/features.h", line 125: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/features.h", line 126: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/features.h", line 145: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/features.h", line 185: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/features.h", line 187: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/features.h", line 189: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/features.h", line 227: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/features.h", line 229: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/features.h", line 265: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/features.h", line 267: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/features.h", line 273: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/features.h", line 352: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/features.h", line 360: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/features.h", line 368: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/features.h", line 374: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 34: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 35: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 72: warning: (MISRA-C:2004 5.6/A) No identifier in one name space should have the same spelling as an identifier in another name space, with the exception of structure member and union member names ("__inline")
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 76: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 76: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "fct" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 76: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 82: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 82: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "args" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 82: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 83: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 83: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "args" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 83: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 88: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 88: warning: (MISRA-C:2004 19.13/A) The # and ## operators should not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 88: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 89: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 89: warning: (MISRA-C:2004 19.13/A) The # and ## operators should not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 89: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 92: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 93: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 124: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 127: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 132: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 132: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "ptr" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 132: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 133: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 133: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "ptr" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 133: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 134: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 143: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 143: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "name" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 143: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 144: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 145: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 145: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "name" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 145: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 160: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 205: warning: (MISRA-C:2004 5.6/A) No identifier in one name space should have the same spelling as an identifier in another name space, with the exception of structure member and union member names ("__attribute__")
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 205: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 223: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 249: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 269: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 280: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 288: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 310: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 377: warning: (MISRA-C:2004 19.11/R) All macro identifiers in preprocessor directives shall be defined before use, except in #ifdef and #ifndef preprocessor directives and the defined() operator ("__GNUC__")
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 381: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 382: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 385: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/bits/wordsize.h", line 9: warning: (MISRA-C:2004 19.15/R) Precautions shall be taken in order to prevent the contents of a header file being included twice
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 407: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 407: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "name" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 407: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "proto" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 407: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 408: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 408: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "name" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 408: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "proto" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 408: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 409: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 409: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "name" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 409: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "proto" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 409: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 410: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 410: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "name" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 410: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "proto" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 410: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/sys/cdefs.h", line 411: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/features.h", line 398: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/gnu/stubs.h", line 12: warning: (MISRA-C:2004 19.15/R) Precautions shall be taken in order to prevent the contents of a header file being included twice
"/home/rtrk/Downloads/c6000_7.4.23/include/stddef.h", line 46: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("NULL")
"/home/rtrk/Downloads/c6000_7.4.23/include/stddef.h", line 49: warning: (MISRA-C:2004 1.1/R) Ensure strict ANSI C mode (-ps) is enabled
"/home/rtrk/Downloads/c6000_7.4.23/include/stddef.h", line 49: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("ptrdiff_t")
"/home/rtrk/Downloads/c6000_7.4.23/include/stddef.h", line 53: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("size_t")
"/home/rtrk/Downloads/c6000_7.4.23/include/stddef.h", line 60: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("wchar_t")
"/home/rtrk/Downloads/c6000_7.4.23/include/stddef.h", line 68: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("offsetof")
"/home/rtrk/Downloads/c6000_7.4.23/include/stddef.h", line 68: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stddef.h", line 68: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "_type" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/stddef.h", line 68: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "_ident" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/dlfcn.h", line 56: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/dlfcn.h", line 60: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/SinglyLinkedList.h", line 11: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code
"/home/rtrk/Downloads/c6000_7.4.23/include/linkage.h", line 56: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/linkage.h", line 60: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/linkage.h", line 72: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/linkage.h", line 74: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 47: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("va_list")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 63: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("va_end")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 63: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 79: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("va_start")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 79: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 79: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "_ap" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 137: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("va_arg")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 137: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 137: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "_ap" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 137: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "_type" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 137: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "_ap" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 137: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "_ap" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 137: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "_ap" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 137: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "_ap" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 137: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "_type" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 137: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "_ap" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 137: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "_ap" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 137: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "_type" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 137: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "_ap" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 49: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 57: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 58: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 59: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 60: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 73: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 78: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 79: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("FILE")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 83: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fpos_t")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 93: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("_IOFBF")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 94: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("_IOLBF")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 95: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("_IONBF")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 107: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 108: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 109: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 110: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 111: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 116: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("BUFSIZ")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 118: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("FOPEN_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 118: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 119: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("FILENAME_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 120: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("TMP_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 127: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("stdin")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 128: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("stdout")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 129: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("stderr")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 132: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("L_tmpnam")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 132: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 135: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("SEEK_SET")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 136: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("SEEK_CUR")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 137: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("SEEK_END")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 144: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("EOF")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 166: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 166: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("remove")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 167: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 167: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("rename")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 168: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("tmpfile")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 169: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("tmpnam")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 174: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 174: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fclose")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 175: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fopen")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 176: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("freopen")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 178: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("setbuf")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 179: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 180: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 179: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("setvbuf")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 181: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 181: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fflush")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 186: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 186: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fprintf")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 188: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 188: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fscanf")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 190: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 190: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("printf")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 192: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 192: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("scanf")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 194: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 194: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("sprintf")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 196: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 199: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 199: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("sscanf")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 201: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 201: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("vfprintf")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 203: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 205: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 205: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("vprintf")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 207: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 209: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 209: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("vsprintf")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 212: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 215: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 221: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 221: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fgetc")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 222: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 222: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fgets")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 224: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 224: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 224: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fputc")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 225: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 225: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fputs")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 226: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 226: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("getc")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 227: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 227: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("getchar")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 228: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("gets")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 229: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 229: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 229: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("putc")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 230: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 230: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 230: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("putchar")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 231: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 231: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("puts")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 232: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 232: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 232: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("ungetc")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 237: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fread")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 239: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fwrite")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 245: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 245: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fgetpos")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 246: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 246: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 247: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 246: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fseek")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 248: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 248: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fsetpos")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 249: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 249: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("ftell")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 250: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("rewind")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 255: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("clearerr")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 256: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 256: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("feof")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 257: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 257: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("ferror")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 258: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("perror")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 260: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 260: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 261: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 261: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 262: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 264: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 266: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 55: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 56: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 57: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 58: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 62: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 62: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 62: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("div_t")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 64: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 64: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("quot")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 64: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 64: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("rem")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 64: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("ldiv_t")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 67: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 67: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("quot")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 67: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 67: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("rem")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 69: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("MB_CUR_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 87: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("EXIT_FAILURE")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 88: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("EXIT_SUCCESS")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 90: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("RAND_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 92: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 101: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 101: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 101: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("abs")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 101: warning: (MISRA-C:2004 16.4/R) The identifiers used in the declaration and definition of a function shall be identical
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 102: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 102: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 102: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("labs")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 102: warning: (MISRA-C:2004 16.4/R) The identifiers used in the declaration and definition of a function shall be identical
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 104: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 104: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 104: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 104: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 106: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 106: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("atoi")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 107: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 107: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("atol")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 109: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 109: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 111: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 111: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 112: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 112: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("atof")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 114: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 114: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 114: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("strtol")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 115: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 116: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 115: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("strtoul")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 118: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 118: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 118: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 119: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 119: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 120: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 122: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 123: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 123: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("strtod")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 124: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 124: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 126: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 126: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("rand")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 127: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("srand")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 129: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("calloc")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 131: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("malloc")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 133: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("realloc")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 135: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("free")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 139: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("abort")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 142: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 142: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("atexit")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 144: warning: (MISRA-C:2004 16.3/R) Identifiers shall be given for all of the parameters in a function prototype declaration
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 145: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("bsearch")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 148: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("qsort")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 151: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 151: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("exit")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 153: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 153: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 153: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("div")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 154: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 154: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 154: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("ldiv")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 156: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 156: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 156: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 156: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 159: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("getenv")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 160: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 160: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("system")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 162: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 162: warning: (MISRA-C:2004 16.3/R) Identifiers shall be given for all of the parameters in a function prototype declaration
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 162: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("mblen")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 163: warning: (MISRA-C:2004 16.3/R) Identifiers shall be given for all of the parameters in a function prototype declaration
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 163: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("mbstowcs")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 164: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 164: warning: (MISRA-C:2004 16.3/R) Identifiers shall be given for all of the parameters in a function prototype declaration
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 164: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("mbtowc")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 166: warning: (MISRA-C:2004 16.3/R) Identifiers shall be given for all of the parameters in a function prototype declaration
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 166: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("wcstombs")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 167: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 167: warning: (MISRA-C:2004 16.3/R) Identifiers shall be given for all of the parameters in a function prototype declaration
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 167: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("wctomb")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdint.h", line 205: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdint.h", line 206: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdint.h", line 207: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdint.h", line 208: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdint.h", line 209: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdint.h", line 210: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdint.h", line 212: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdint.h", line 213: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdint.h", line 215: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdint.h", line 216: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdint.h", line 220: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdint.h", line 221: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/inttypes.h", line 45: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("quot")
"/home/rtrk/Downloads/c6000_7.4.23/include/inttypes.h", line 45: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("rem")
"/home/rtrk/Downloads/c6000_7.4.23/include/inttypes.h", line 53: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/_fmt_specifier.h", line 233: warning: (MISRA-C:2004 19.15/R) Precautions shall be taken in order to prevent the contents of a header file being included twice
"/home/rtrk/Downloads/c6000_7.4.23/include/inttypes.h", line 57: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/inttypes.h", line 62: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/inttypes.h", line 64: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 73: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 74: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 76: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 106: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 107: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 156: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 186: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 241: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 425: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 426: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 549: warning: (MISRA-C:2004 16.3/R) Identifiers shall be given for all of the parameters in a function prototype declaration
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 557: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 558: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 559: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 561: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 561: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "x" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 561: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 581: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 581: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 582: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 582: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 600: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 606: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 607: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 609: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 616: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 620: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 624: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 632: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 639: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 645: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 655: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 656: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 660: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 665: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 669: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 679: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 680: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 685: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 690: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 692: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 693: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 697: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 697: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "fun" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 697: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 713: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 715: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/_lock.h", line 47: warning: (MISRA-C:2004 16.5/R) Functions with no parameters shall be declared and defined with the parameter list void
"/home/rtrk/Downloads/c6000_7.4.23/include/_lock.h", line 49: warning: (MISRA-C:2004 16.5/R) Functions with no parameters shall be declared and defined with the parameter list void
"/home/rtrk/Downloads/c6000_7.4.23/include/_lock.h", line 50: warning: (MISRA-C:2004 16.5/R) Functions with no parameters shall be declared and defined with the parameter list void
"/home/rtrk/Downloads/c6000_7.4.23/include/_lock.h", line 52: warning: (MISRA-C:2004 16.5/R) Functions with no parameters shall be declared and defined with the parameter list void
"/home/rtrk/Downloads/c6000_7.4.23/include/_lock.h", line 53: warning: (MISRA-C:2004 16.5/R) Functions with no parameters shall be declared and defined with the parameter list void
"/home/rtrk/Downloads/c6000_7.4.23/include/stdbool.h", line 25: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 21: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"../unity_internals.h", line 15: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/setjmp.h", line 52: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("setjmp")
"/home/rtrk/Downloads/c6000_7.4.23/include/setjmp.h", line 52: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/setjmp.h", line 52: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/setjmp.h", line 55: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("jmp_buf")
"/home/rtrk/Downloads/c6000_7.4.23/include/setjmp.h", line 65: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/setjmp.h", line 68: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/setjmp.h", line 68: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("longjmp")
"../unity_internals.h", line 19: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 49: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("EDOM")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 57: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("ERANGE")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 61: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 46: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("FLT_RADIX")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 47: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("FLT_ROUNDS")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 49: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("FLT_DIG")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 50: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("FLT_MANT_DIG")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 51: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("FLT_MIN_EXP")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 51: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 52: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("FLT_MAX_EXP")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 53: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("FLT_MIN_10_EXP")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 53: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 54: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("FLT_MAX_10_EXP")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 55: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("FLT_EPSILON")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 56: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("FLT_MIN")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 57: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("FLT_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 59: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("DBL_DIG")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 60: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("DBL_MANT_DIG")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 61: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("DBL_MIN_EXP")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 61: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 62: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("DBL_MAX_EXP")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 63: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("DBL_MIN_10_EXP")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 63: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 64: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("DBL_MAX_10_EXP")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 65: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("DBL_EPSILON")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 66: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("DBL_MIN")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 67: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("DBL_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 69: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("LDBL_DIG")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 70: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("LDBL_MANT_DIG")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 71: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("LDBL_MIN_EXP")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 71: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 72: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("LDBL_MAX_EXP")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 73: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("LDBL_MIN_10_EXP")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 73: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 74: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("LDBL_MAX_10_EXP")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 75: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("LDBL_EPSILON")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 76: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("LDBL_MIN")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 77: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("LDBL_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 62: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("HUGE_VAL")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 62: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 63: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 65: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/access.h", line 40: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/access.h", line 41: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/access.h", line 42: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/access.h", line 48: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/access.h", line 50: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/access.h", line 51: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 66: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 69: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 70: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 71: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 72: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 76: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 76: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 76: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("sqrt")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 77: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 77: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 77: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("exp")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 78: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 78: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 78: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("log")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 79: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 79: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 79: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("log10")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 80: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 80: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 80: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 80: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("pow")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 81: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 81: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 81: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("sin")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 82: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 82: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 82: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("cos")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 83: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 83: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 83: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("tan")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 84: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 84: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 84: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("asin")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 85: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 85: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 85: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("acos")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 86: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 86: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 86: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("atan")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 87: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 87: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 87: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 87: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("atan2")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 88: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 88: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 88: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("sinh")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 89: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 89: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 89: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("cosh")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 90: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 90: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 90: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("tanh")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 92: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 92: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 92: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("ceil")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 93: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 93: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 93: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("floor")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 95: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 95: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 95: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fabs")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 95: warning: (MISRA-C:2004 16.4/R) The identifiers used in the declaration and definition of a function shall be identical
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 97: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 97: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 97: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 97: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("ldexp")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 98: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 98: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 98: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 98: warning: (MISRA-C:2004 5.2/R) Identifiers in an inner scope shall not use the same name as an identifier in an outer scope, and therefore hide that identifier ("exp")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 98: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("frexp")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 99: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 99: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 99: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 99: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("modf")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 100: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 100: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 100: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 100: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fmod")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 104: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 104: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 104: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 107: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 107: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 108: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 108: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 115: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 53: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 136: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 137: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 138: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 139: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 143: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 145: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 145: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 146: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 146: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 147: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 147: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 148: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 148: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 149: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 149: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 149: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 150: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 150: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 151: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 151: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 152: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 152: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 153: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 153: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 154: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 154: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 155: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 155: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 156: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 156: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 156: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 157: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 157: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 158: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 158: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 159: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 159: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 161: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 161: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 162: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 162: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 164: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 164: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 164: warning: (MISRA-C:2004 16.4/R) The identifiers used in the declaration and definition of a function shall be identical
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 166: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 166: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 166: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 167: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 167: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 167: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 167: warning: (MISRA-C:2004 5.2/R) Identifiers in an inner scope shall not use the same name as an identifier in an outer scope, and therefore hide that identifier ("exp")
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 168: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 168: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 168: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 169: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 169: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 169: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 173: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 173: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 173: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 176: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 176: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 177: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 177: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 186: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 188: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 188: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 189: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 189: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 190: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 190: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 191: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 191: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 193: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 193: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 193: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 195: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 195: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 196: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 196: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 197: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 197: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 197: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 199: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 199: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 201: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 201: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 202: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 202: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 203: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 203: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 204: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 204: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 213: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 213: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 216: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 216: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 217: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 217: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 218: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 218: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 219: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 219: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 221: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 224: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 227: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 231: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 235: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 239: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 240: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 311: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 116: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 53: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 54: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 63: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 64: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 65: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 66: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 67: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 68: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 71: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 72: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 73: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 74: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 75: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 76: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 77: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 78: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 79: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 81: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 82: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 84: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 86: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 87: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 88: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 96: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 96: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 96: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 96: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 96: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 96: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 110: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 112: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 113: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 114: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 115: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 116: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 117: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 118: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 119: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 120: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 121: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 122: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 123: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 124: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 125: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 126: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 127: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 128: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 129: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 130: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 131: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 137: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 138: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 139: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 140: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 118: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 131: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 131: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 132: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 132: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 133: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 133: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 134: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 134: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 136: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 136: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 136: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 138: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 138: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 139: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 139: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 140: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 140: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 140: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 142: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 142: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 144: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 144: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 145: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 145: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 146: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 146: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 147: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 147: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 156: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 156: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 159: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 159: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 160: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 160: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 161: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 161: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 162: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 162: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 164: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 167: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 170: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 174: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 178: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 182: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 183: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 286: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"../unity_internals.h", line 23: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"../unity_internals.h", line 36: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"../unity_internals.h", line 40: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 45: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("CHAR_BIT")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 46: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("SCHAR_MIN")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 46: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 47: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("SCHAR_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 48: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("UCHAR_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 49: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("CHAR_MIN")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 49: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 50: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("CHAR_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 50: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 51: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("MB_LEN_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 53: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("SHRT_MIN")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 53: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 54: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("SHRT_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 55: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("USHRT_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 57: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("INT_MIN")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 58: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("INT_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 59: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("UINT_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 66: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("LONG_MIN")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 67: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("LONG_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 68: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("ULONG_MAX")
"../unity_internals.h", line 55: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity_internals.h", line 57: warning: (MISRA-C:2004 10.6/R) A "U" suffix shall be applied to all constants of unsigned type
"../unity_internals.h", line 70: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity_internals.h", line 74: warning: (MISRA-C:2004 10.6/R) A "U" suffix shall be applied to all constants of unsigned type
"../unity_internals.h", line 85: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity_internals.h", line 87: warning: (MISRA-C:2004 10.6/R) A "U" suffix shall be applied to all constants of unsigned type
"../unity_internals.h", line 125: warning: (MISRA-C:2004 19.11/R) All macro identifiers in preprocessor directives shall be defined before use, except in #ifdef and #ifndef preprocessor directives and the defined() operator ("UNITY_LONG_WIDTH")
"../unity_internals.h", line 157: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 158: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 174: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 198: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 232: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 257: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"../unity_internals.h", line 257: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 57: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 58: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 59: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 60: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"../unity_internals.h", line 258: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 258: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 273: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 285: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 285: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 289: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 289: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 293: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 297: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 348: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 352: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 356: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 360: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 368: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 372: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 413: warning: (MISRA-C:2004 9.3/R) In an enumerator list, the '=' construct shall not be used to explicitly initialise members other than the first, unless all items are explicitly initialised
"../unity_internals.h", line 424: warning: (MISRA-C:2004 9.3/R) In an enumerator list, the '=' construct shall not be used to explicitly initialise members other than the first, unless all items are explicitly initialised
"../unity_internals.h", line 479: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity_internals.h", line 481: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity_internals.h", line 492: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 492: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 493: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 493: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 494: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 494: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 553: warning: (MISRA-C:2004 5.6/A) No identifier in one name space should have the same spelling as an identifier in another name space, with the exception of structure member and union member names ("flags")
"../unity_internals.h", line 577: warning: (MISRA-C:2004 5.6/A) No identifier in one name space should have the same spelling as an identifier in another name space, with the exception of structure member and union member names ("flags")
"../unity_internals.h", line 585: warning: (MISRA-C:2004 5.6/A) No identifier in one name space should have the same spelling as an identifier in another name space, with the exception of structure member and union member names ("flags")
"../unity_internals.h", line 601: warning: (MISRA-C:2004 5.6/A) No identifier in one name space should have the same spelling as an identifier in another name space, with the exception of structure member and union member names ("flags")
"../unity_internals.h", line 619: warning: (MISRA-C:2004 5.6/A) No identifier in one name space should have the same spelling as an identifier in another name space, with the exception of structure member and union member names ("flags")
"../unity_internals.h", line 653: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity_internals.h", line 663: warning: (MISRA-C:2004 8.12/R) When an array is declared with external linkage, its size shall be stated explicitly or defined implicitly by initialisation
"../unity_internals.h", line 664: warning: (MISRA-C:2004 8.12/R) When an array is declared with external linkage, its size shall be stated explicitly or defined implicitly by initialisation
"../unity_internals.h", line 665: warning: (MISRA-C:2004 8.12/R) When an array is declared with external linkage, its size shall be stated explicitly or defined implicitly by initialisation
"../unity_internals.h", line 666: warning: (MISRA-C:2004 8.12/R) When an array is declared with external linkage, its size shall be stated explicitly or defined implicitly by initialisation
"../unity_internals.h", line 668: warning: (MISRA-C:2004 8.12/R) When an array is declared with external linkage, its size shall be stated explicitly or defined implicitly by initialisation
"../unity_internals.h", line 669: warning: (MISRA-C:2004 8.12/R) When an array is declared with external linkage, its size shall be stated explicitly or defined implicitly by initialisation
"../unity_internals.h", line 670: warning: (MISRA-C:2004 8.12/R) When an array is declared with external linkage, its size shall be stated explicitly or defined implicitly by initialisation
"../unity_internals.h", line 671: warning: (MISRA-C:2004 8.12/R) When an array is declared with external linkage, its size shall be stated explicitly or defined implicitly by initialisation
"../unity_internals.h", line 678: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 679: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 679: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 706: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 706: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "func" is used as an operand of # or ##.
"../unity_internals.h", line 706: warning: (MISRA-C:2004 19.13/A) The # and ## operators should not be used
"../unity_internals.h", line 706: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 712: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 712: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 718: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 718: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 722: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 722: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 748: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 748: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 749: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 749: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 755: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 755: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 756: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 756: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 757: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 757: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 759: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 759: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 760: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 760: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 761: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 761: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 762: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 762: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 763: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 763: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 764: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 764: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 765: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 765: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 766: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 766: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 767: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 767: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 768: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 768: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 769: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 769: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 770: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 770: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 771: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 771: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 773: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 773: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 774: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 774: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 775: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 775: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 776: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 776: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 777: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 777: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 778: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 778: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 779: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 779: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 780: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 780: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 781: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 781: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 782: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 782: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 783: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 783: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 784: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 784: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 786: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 786: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 787: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 787: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 788: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 788: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 789: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 789: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 790: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 790: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 791: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 791: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 792: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 792: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 793: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 793: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 794: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 794: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 795: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 795: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 796: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 796: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 797: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 797: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 799: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 799: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 800: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 800: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 801: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 801: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 802: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 802: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 803: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 803: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 804: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 804: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 805: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 805: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 806: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 806: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 807: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 807: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 808: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 808: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 809: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 809: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 810: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 810: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 812: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 812: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 813: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 813: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 814: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 814: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 815: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 815: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 816: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 816: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 817: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 817: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 818: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 818: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 819: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 819: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 820: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 820: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 821: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 821: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 822: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 822: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 823: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 823: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 825: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 825: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 826: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 826: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 827: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 827: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 828: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 828: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 829: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 829: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 830: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 830: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 831: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 831: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 832: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 832: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 833: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 833: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 834: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 834: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 835: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 835: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 836: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 836: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 838: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 838: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 839: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 839: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 840: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 840: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 841: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 841: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 842: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 842: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 843: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 843: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 844: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 844: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 845: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 845: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 846: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 846: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 847: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 847: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 848: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 848: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 849: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 849: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 852: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 852: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 853: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 853: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 854: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 854: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 855: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 855: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 857: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 857: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 858: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 858: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 859: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 859: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 860: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 860: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 861: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 861: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 862: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 862: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 863: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 863: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 864: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 864: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 865: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 865: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 866: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 866: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 867: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 867: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 868: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 868: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 869: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 869: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 870: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 870: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 871: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 871: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 873: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 873: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 874: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 874: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 875: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 875: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 876: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 876: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 877: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 877: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 878: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 878: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 879: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 879: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 880: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 880: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 881: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 881: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 882: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 882: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 883: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 883: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 884: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 884: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 885: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 885: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 886: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 886: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 887: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 887: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 918: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 918: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 919: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 919: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 920: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 920: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 921: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 921: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 922: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 922: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 923: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 923: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 924: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 924: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 925: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 925: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 926: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 926: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 927: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 927: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 928: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 928: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 929: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 929: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 930: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 930: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 931: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 931: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 932: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 932: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 933: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 933: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 934: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 934: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 935: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 935: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 936: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 936: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 937: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 937: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 938: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 938: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 939: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 939: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 940: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 940: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 941: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 941: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 958: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 958: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 959: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 959: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 960: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 960: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 961: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 961: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 962: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 962: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 963: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 963: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 964: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 964: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 965: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 965: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 966: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 966: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 967: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 967: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 968: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 968: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 969: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 969: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 973: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 973: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 974: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 974: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 975: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 975: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 976: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 976: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 977: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 977: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 978: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 978: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 979: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 979: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 980: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 980: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 981: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 981: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 982: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 982: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 983: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 983: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 984: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 984: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 31: warning: (MISRA-C:2004 8.8/R) An external object or function shall be declared in one and only one file
"../unity.h", line 32: warning: (MISRA-C:2004 8.8/R) An external object or function shall be declared in one and only one file
"../unity.h", line 41: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.h", line 41: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.h", line 101: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 101: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 102: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 102: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 103: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 103: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 104: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 104: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 105: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 105: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 106: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 110: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 110: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 111: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 115: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 122: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 122: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 123: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 123: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 124: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 124: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 125: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 125: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 126: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 126: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 127: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 127: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 130: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 130: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 131: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 131: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 132: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 132: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 133: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 133: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 134: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 134: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 135: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 135: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 136: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 136: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 137: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 137: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 138: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 138: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 139: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 139: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 140: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 140: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 141: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 141: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 142: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 142: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 143: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 143: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 144: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 144: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 145: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 145: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 146: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 146: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 147: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 147: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 148: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 148: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 149: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 149: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 150: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 150: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 151: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 151: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 154: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 154: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 155: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 155: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 156: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 156: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 157: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 157: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 158: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 158: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 159: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 159: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 160: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 160: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 161: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 161: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 162: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 162: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 163: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 163: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 164: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 164: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 165: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 165: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 166: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 166: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 167: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 167: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 168: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 168: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 169: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 169: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 170: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 170: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 172: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 172: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 173: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 173: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 174: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 174: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 175: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 175: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 176: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 176: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 177: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 177: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 178: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 178: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 179: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 179: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 180: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 180: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 181: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 181: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 182: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 182: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 183: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 183: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 184: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 184: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 185: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 185: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 186: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 186: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 187: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 187: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 188: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 188: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 190: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 190: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 191: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 191: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 192: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 192: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 193: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 193: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 194: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 194: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 195: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 195: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 196: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 196: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 197: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 197: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 198: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 198: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 199: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 199: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 200: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 200: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 201: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 201: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 202: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 202: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 203: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 203: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 204: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 204: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 205: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 205: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 206: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 206: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 208: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 208: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 209: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 209: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 210: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 210: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 211: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 211: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 212: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 212: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 213: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 213: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 214: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 214: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 215: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 215: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 216: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 216: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 217: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 217: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 218: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 218: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 219: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 219: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 220: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 220: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 221: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 221: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 222: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 222: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 223: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 223: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 224: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 224: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 227: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 227: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 228: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 228: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 229: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 229: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 230: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 230: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 231: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 231: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 232: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 232: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 233: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 233: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 234: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 234: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 235: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 235: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 236: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 236: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 237: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 237: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 238: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 238: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 239: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 239: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 240: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 240: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 241: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 241: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 242: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 242: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 243: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 243: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 246: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 246: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 246: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 247: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 247: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 247: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 248: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 248: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 248: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 249: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 249: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 249: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 250: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 250: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 250: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 251: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 251: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 251: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 252: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 252: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 252: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 253: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 253: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 253: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 254: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 254: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 254: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 255: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 255: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 255: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 256: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 256: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 256: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 257: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 257: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 257: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 258: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 258: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 258: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 259: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 259: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 259: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 260: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 260: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 260: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 261: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 261: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 261: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 262: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 262: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 262: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 266: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 266: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 267: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 267: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 268: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 268: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 269: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 269: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 272: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 272: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 273: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 273: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 274: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 274: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 275: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 275: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 276: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 276: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 277: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 277: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 278: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 278: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 279: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 279: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 280: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 280: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 281: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 281: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 282: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 282: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 283: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 283: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 284: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 284: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 285: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 285: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 286: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 286: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 287: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 287: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 288: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 288: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 289: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 289: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 290: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 290: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 291: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 291: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 294: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 294: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 295: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 295: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 296: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 296: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 297: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 297: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 298: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 298: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 299: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 299: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 300: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 300: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 301: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 301: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 302: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 302: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 303: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 303: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 304: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 304: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 305: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 305: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 306: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 306: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 307: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 307: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 308: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 308: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 309: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 309: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 310: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 310: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 311: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 311: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 312: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 312: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 313: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 313: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 316: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 316: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 317: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 317: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 318: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 318: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 319: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 319: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 320: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 320: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 321: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 321: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 322: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 322: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 323: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 323: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 324: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 324: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 325: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 325: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 326: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 326: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 327: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 327: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 330: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 330: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 331: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 331: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 332: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 332: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 333: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 333: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 334: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 334: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 335: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 335: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 336: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 336: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 337: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 337: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 338: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 338: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 339: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 339: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 340: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 340: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 341: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 341: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 345: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 345: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 346: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 346: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 370: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 370: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 371: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 371: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 372: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 372: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 373: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 373: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 374: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 374: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 375: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 375: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 378: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 378: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 379: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 379: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 380: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 380: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 381: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 381: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 382: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 382: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 383: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 383: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 384: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 384: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 385: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 385: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 386: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 386: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 387: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 387: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 388: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 388: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 389: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 389: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 390: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 390: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 391: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 391: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 392: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 392: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 393: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 393: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 394: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 394: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 395: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 395: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 396: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 396: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 397: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 397: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 398: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 398: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 399: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 399: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 402: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 402: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 403: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 403: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 404: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 404: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 405: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 405: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 406: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 406: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 407: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 407: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 408: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 408: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 409: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 409: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 410: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 410: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 411: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 411: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 412: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 412: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 413: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 413: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 414: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 414: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 415: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 415: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 416: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 416: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 417: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 417: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 418: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 418: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 420: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 420: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 421: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 421: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 422: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 422: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 423: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 423: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 424: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 424: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 425: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 425: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 426: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 426: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 427: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 427: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 428: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 428: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 429: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 429: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 430: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 430: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 431: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 431: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 432: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 432: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 433: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 433: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 434: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 434: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 435: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 435: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 436: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 436: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 438: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 438: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 439: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 439: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 440: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 440: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 441: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 441: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 442: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 442: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 443: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 443: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 444: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 444: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 445: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 445: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 446: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 446: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 447: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 447: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 448: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 448: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 449: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 449: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 450: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 450: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 451: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 451: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 452: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 452: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 453: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 453: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 454: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 454: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 456: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 456: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 457: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 457: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 458: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 458: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 459: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 459: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 460: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 460: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 461: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 461: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 462: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 462: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 463: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 463: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 464: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 464: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 465: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 465: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 466: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 466: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 467: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 467: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 468: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 468: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 469: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 469: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 470: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 470: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 471: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 471: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 472: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 472: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 475: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 475: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 476: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 476: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 477: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 477: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 478: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 478: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 479: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 479: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 480: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 480: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 481: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 481: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 482: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 482: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 483: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 483: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 484: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 484: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 485: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 485: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 486: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 486: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 487: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 487: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 488: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 488: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 489: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 489: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 490: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 490: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 491: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 491: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 494: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 494: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 494: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 495: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 495: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 495: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 496: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 496: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 496: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 497: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 497: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 497: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 498: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 498: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 498: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 499: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 499: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 499: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 500: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 500: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 500: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 501: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 501: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 501: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 502: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 502: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 502: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 503: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 503: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 503: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 504: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 504: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 504: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 505: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 505: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 505: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 506: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 506: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 506: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 507: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 507: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 507: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 508: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 508: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 508: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 509: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 509: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 509: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 510: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 510: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 510: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 514: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 514: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 515: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 515: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 516: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 516: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 517: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 517: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 520: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 520: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 521: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 521: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 522: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 522: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 523: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 523: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 524: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 524: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 525: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 525: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 526: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 526: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 527: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 527: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 528: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 528: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 529: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 529: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 530: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 530: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 531: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 531: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 532: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 532: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 533: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 533: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 534: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 534: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 535: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 535: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 536: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 536: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 537: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 537: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 538: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 538: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 539: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 539: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 542: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 542: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 543: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 543: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 544: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 544: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 545: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 545: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 546: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 546: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 547: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 547: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 548: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 548: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 549: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 549: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 550: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 550: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 551: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 551: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 552: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 552: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 553: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 553: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 554: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 554: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 555: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 555: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 556: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 556: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 557: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 557: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 558: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 558: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 559: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 559: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 560: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 560: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 561: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 561: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 564: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 564: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 565: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 565: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 566: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 566: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 567: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 567: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 568: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 568: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 569: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 569: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 570: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 570: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 571: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 571: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 572: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 572: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 573: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 573: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 574: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 574: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 575: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 575: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 578: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 578: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 579: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 579: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 580: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 580: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 581: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 581: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 582: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 582: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 583: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 583: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 584: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 584: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 585: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 585: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 586: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 586: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 587: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 587: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 588: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 588: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 589: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 589: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 593: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 593: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 594: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 594: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../SinglyLinkedListTest.c", line 13: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("list")
"../SinglyLinkedListTest.c", line 38: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("fputs")
"../SinglyLinkedListTest.c", line 38: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("stderr")
"../SinglyLinkedListTest.c", line 39: warning: (MISRA-C:2004 20.11/R) The library functions abort, exit, getenv and system from library <stdlib.h> shall not be used
"../SinglyLinkedListTest.c", line 42: warning: a value of type "void *" cannot be assigned to an entity of type "void (*)(LinkedList *)"
"../SinglyLinkedListTest.c", line 43: warning: (MISRA-C:2004 13.1/R) Assignment operators shall not be used in expressions that yield a Boolean value
"../SinglyLinkedListTest.c", line 43: warning: (MISRA-C:2004 12.2/R) The value of an expression shall be the same under any order of evaluation that the standard permits
"../SinglyLinkedListTest.c", line 45: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("fputs")
"../SinglyLinkedListTest.c", line 45: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("stderr")
"../SinglyLinkedListTest.c", line 46: warning: (MISRA-C:2004 20.11/R) The library functions abort, exit, getenv and system from library <stdlib.h> shall not be used
"../SinglyLinkedListTest.c", line 49: warning: a value of type "void *" cannot be assigned to an entity of type "void (*)(LinkedList *)"
"../SinglyLinkedListTest.c", line 50: warning: (MISRA-C:2004 13.1/R) Assignment operators shall not be used in expressions that yield a Boolean value
"../SinglyLinkedListTest.c", line 50: warning: (MISRA-C:2004 12.2/R) The value of an expression shall be the same under any order of evaluation that the standard permits
"../SinglyLinkedListTest.c", line 52: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("fputs")
"../SinglyLinkedListTest.c", line 52: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("stderr")
"../SinglyLinkedListTest.c", line 53: warning: (MISRA-C:2004 20.11/R) The library functions abort, exit, getenv and system from library <stdlib.h> shall not be used
"../SinglyLinkedListTest.c", line 56: warning: a value of type "void *" cannot be assigned to an entity of type "uint8_t (*)(LinkedList *)"
"../SinglyLinkedListTest.c", line 57: warning: (MISRA-C:2004 13.1/R) Assignment operators shall not be used in expressions that yield a Boolean value
"../SinglyLinkedListTest.c", line 57: warning: (MISRA-C:2004 12.2/R) The value of an expression shall be the same under any order of evaluation that the standard permits
"../SinglyLinkedListTest.c", line 59: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("fputs")
"../SinglyLinkedListTest.c", line 59: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("stderr")
"../SinglyLinkedListTest.c", line 60: warning: (MISRA-C:2004 20.11/R) The library functions abort, exit, getenv and system from library <stdlib.h> shall not be used
"../SinglyLinkedListTest.c", line 63: warning: a value of type "void *" cannot be assigned to an entity of type "void (*)(LinkedList *, int_fast32_t)"
"../SinglyLinkedListTest.c", line 64: warning: (MISRA-C:2004 13.1/R) Assignment operators shall not be used in expressions that yield a Boolean value
"../SinglyLinkedListTest.c", line 64: warning: (MISRA-C:2004 12.2/R) The value of an expression shall be the same under any order of evaluation that the standard permits
"../SinglyLinkedListTest.c", line 66: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("fputs")
"../SinglyLinkedListTest.c", line 66: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("stderr")
"../SinglyLinkedListTest.c", line 67: warning: (MISRA-C:2004 20.11/R) The library functions abort, exit, getenv and system from library <stdlib.h> shall not be used
"../SinglyLinkedListTest.c", line 70: warning: a value of type "void *" cannot be assigned to an entity of type "void (*)(LinkedList *, int_fast32_t, int_fast32_t)"
"../SinglyLinkedListTest.c", line 71: warning: (MISRA-C:2004 13.1/R) Assignment operators shall not be used in expressions that yield a Boolean value
"../SinglyLinkedListTest.c", line 71: warning: (MISRA-C:2004 12.2/R) The value of an expression shall be the same under any order of evaluation that the standard permits
"../SinglyLinkedListTest.c", line 73: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("fputs")
"../SinglyLinkedListTest.c", line 73: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("stderr")
"../SinglyLinkedListTest.c", line 74: warning: (MISRA-C:2004 20.11/R) The library functions abort, exit, getenv and system from library <stdlib.h> shall not be used
"../SinglyLinkedListTest.c", line 77: warning: a value of type "void *" cannot be assigned to an entity of type "void (*)(LinkedList *, int_fast32_t)"
"../SinglyLinkedListTest.c", line 78: warning: (MISRA-C:2004 13.1/R) Assignment operators shall not be used in expressions that yield a Boolean value
"../SinglyLinkedListTest.c", line 78: warning: (MISRA-C:2004 12.2/R) The value of an expression shall be the same under any order of evaluation that the standard permits
"../SinglyLinkedListTest.c", line 80: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("fputs")
"../SinglyLinkedListTest.c", line 80: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("stderr")
"../SinglyLinkedListTest.c", line 81: warning: (MISRA-C:2004 20.11/R) The library functions abort, exit, getenv and system from library <stdlib.h> shall not be used
"../SinglyLinkedListTest.c", line 84: warning: a value of type "void *" cannot be assigned to an entity of type "void (*)(LinkedList *)"
"../SinglyLinkedListTest.c", line 85: warning: (MISRA-C:2004 13.1/R) Assignment operators shall not be used in expressions that yield a Boolean value
"../SinglyLinkedListTest.c", line 85: warning: (MISRA-C:2004 12.2/R) The value of an expression shall be the same under any order of evaluation that the standard permits
"../SinglyLinkedListTest.c", line 87: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("fputs")
"../SinglyLinkedListTest.c", line 87: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("stderr")
"../SinglyLinkedListTest.c", line 88: warning: (MISRA-C:2004 20.11/R) The library functions abort, exit, getenv and system from library <stdlib.h> shall not be used
"../SinglyLinkedListTest.c", line 91: warning: a value of type "void *" cannot be assigned to an entity of type "void (*)(LinkedList *, int_fast32_t)"
"../SinglyLinkedListTest.c", line 92: warning: (MISRA-C:2004 13.1/R) Assignment operators shall not be used in expressions that yield a Boolean value
"../SinglyLinkedListTest.c", line 92: warning: (MISRA-C:2004 12.2/R) The value of an expression shall be the same under any order of evaluation that the standard permits
"../SinglyLinkedListTest.c", line 94: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("fputs")
"../SinglyLinkedListTest.c", line 94: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("stderr")
"../SinglyLinkedListTest.c", line 95: warning: (MISRA-C:2004 20.11/R) The library functions abort, exit, getenv and system from library <stdlib.h> shall not be used
"../SinglyLinkedListTest.c", line 98: warning: a value of type "void *" cannot be assigned to an entity of type "void (*)(LinkedList *)"
"../SinglyLinkedListTest.c", line 99: warning: (MISRA-C:2004 13.1/R) Assignment operators shall not be used in expressions that yield a Boolean value
"../SinglyLinkedListTest.c", line 99: warning: (MISRA-C:2004 12.2/R) The value of an expression shall be the same under any order of evaluation that the standard permits
"../SinglyLinkedListTest.c", line 101: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("fputs")
"../SinglyLinkedListTest.c", line 101: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("stderr")
"../SinglyLinkedListTest.c", line 102: warning: (MISRA-C:2004 20.11/R) The library functions abort, exit, getenv and system from library <stdlib.h> shall not be used
"../SinglyLinkedListTest.c", line 105: warning: a value of type "void *" cannot be assigned to an entity of type "uint8_t (*)(LinkedList *, int_fast32_t)"
"../SinglyLinkedListTest.c", line 106: warning: (MISRA-C:2004 13.1/R) Assignment operators shall not be used in expressions that yield a Boolean value
"../SinglyLinkedListTest.c", line 106: warning: (MISRA-C:2004 12.2/R) The value of an expression shall be the same under any order of evaluation that the standard permits
"../SinglyLinkedListTest.c", line 108: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("fputs")
"../SinglyLinkedListTest.c", line 108: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("stderr")
"../SinglyLinkedListTest.c", line 109: warning: (MISRA-C:2004 20.11/R) The library functions abort, exit, getenv and system from library <stdlib.h> shall not be used
"../SinglyLinkedListTest.c", line 112: warning: a value of type "void *" cannot be assigned to an entity of type "void (*)(LinkedList *)"
"../SinglyLinkedListTest.c", line 113: warning: (MISRA-C:2004 13.1/R) Assignment operators shall not be used in expressions that yield a Boolean value
"../SinglyLinkedListTest.c", line 113: warning: (MISRA-C:2004 12.2/R) The value of an expression shall be the same under any order of evaluation that the standard permits
"../SinglyLinkedListTest.c", line 115: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("fputs")
"../SinglyLinkedListTest.c", line 115: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("stderr")
"../SinglyLinkedListTest.c", line 116: warning: (MISRA-C:2004 20.11/R) The library functions abort, exit, getenv and system from library <stdlib.h> shall not be used
"../SinglyLinkedListTest.c", line 119: warning: a value of type "void *" cannot be assigned to an entity of type "int_fast32_t (*)(LinkedList *)"
"../SinglyLinkedListTest.c", line 120: warning: (MISRA-C:2004 13.1/R) Assignment operators shall not be used in expressions that yield a Boolean value
"../SinglyLinkedListTest.c", line 120: warning: (MISRA-C:2004 12.2/R) The value of an expression shall be the same under any order of evaluation that the standard permits
"../SinglyLinkedListTest.c", line 122: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("fputs")
"../SinglyLinkedListTest.c", line 122: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("stderr")
"../SinglyLinkedListTest.c", line 123: warning: (MISRA-C:2004 20.11/R) The library functions abort, exit, getenv and system from library <stdlib.h> shall not be used
"../SinglyLinkedListTest.c", line 126: warning: a value of type "void *" cannot be assigned to an entity of type "void (*)(LinkedList *)"
"../SinglyLinkedListTest.c", line 127: warning: (MISRA-C:2004 13.1/R) Assignment operators shall not be used in expressions that yield a Boolean value
"../SinglyLinkedListTest.c", line 127: warning: (MISRA-C:2004 12.2/R) The value of an expression shall be the same under any order of evaluation that the standard permits
"../SinglyLinkedListTest.c", line 129: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("fputs")
"../SinglyLinkedListTest.c", line 129: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("stderr")
"../SinglyLinkedListTest.c", line 130: warning: (MISRA-C:2004 20.11/R) The library functions abort, exit, getenv and system from library <stdlib.h> shall not be used
"../SinglyLinkedListTest.c", line 133: warning: a value of type "void *" cannot be assigned to an entity of type "LinkedList *(*)(LinkedList *, LinkedList *)"
"../SinglyLinkedListTest.c", line 134: warning: (MISRA-C:2004 13.1/R) Assignment operators shall not be used in expressions that yield a Boolean value
"../SinglyLinkedListTest.c", line 134: warning: (MISRA-C:2004 12.2/R) The value of an expression shall be the same under any order of evaluation that the standard permits
"../SinglyLinkedListTest.c", line 136: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("fputs")
"../SinglyLinkedListTest.c", line 136: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("stderr")
"../SinglyLinkedListTest.c", line 137: warning: (MISRA-C:2004 20.11/R) The library functions abort, exit, getenv and system from library <stdlib.h> shall not be used
"../SinglyLinkedListTest.c", line 140: warning: a value of type "void *" cannot be assigned to an entity of type "void (*)(LinkedList *)"
"../SinglyLinkedListTest.c", line 141: warning: (MISRA-C:2004 13.1/R) Assignment operators shall not be used in expressions that yield a Boolean value
"../SinglyLinkedListTest.c", line 141: warning: (MISRA-C:2004 12.2/R) The value of an expression shall be the same under any order of evaluation that the standard permits
"../SinglyLinkedListTest.c", line 143: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("fputs")
"../SinglyLinkedListTest.c", line 143: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("stderr")
"../SinglyLinkedListTest.c", line 144: warning: (MISRA-C:2004 20.11/R) The library functions abort, exit, getenv and system from library <stdlib.h> shall not be used
"../SinglyLinkedListTest.c", line 195: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("i")
"../SinglyLinkedListTest.c", line 207: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
"../SinglyLinkedListTest.c", line 218: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("expected")
"../SinglyLinkedListTest.c", line 219: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("i")
"../SinglyLinkedListTest.c", line 227: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("current")
"../SinglyLinkedListTest.c", line 231: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
"../SinglyLinkedListTest.c", line 241: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("expected")
"../SinglyLinkedListTest.c", line 242: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("i")
"../SinglyLinkedListTest.c", line 246: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("current")
"../SinglyLinkedListTest.c", line 250: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
"../SinglyLinkedListTest.c", line 260: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("i")
"../SinglyLinkedListTest.c", line 278: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("expected")
"../SinglyLinkedListTest.c", line 279: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("i")
"../SinglyLinkedListTest.c", line 283: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("current")
"../SinglyLinkedListTest.c", line 287: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
"../SinglyLinkedListTest.c", line 298: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
"../SinglyLinkedListTest.c", line 324: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("expected")
"../SinglyLinkedListTest.c", line 326: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("i")
"../SinglyLinkedListTest.c", line 330: warning: (MISRA-C:2004 12.1/A) Limited dependence should be placed on C's operator precedence rules in expressions
"../SinglyLinkedListTest.c", line 347: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("current")
"../SinglyLinkedListTest.c", line 352: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
[main.c]
"/home/rtrk/Downloads/c6000_7.4.23/include/SinglyLinkedList.h", line 11: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code
"/home/rtrk/Downloads/c6000_7.4.23/include/linkage.h", line 56: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/linkage.h", line 60: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/linkage.h", line 72: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/linkage.h", line 74: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 47: warning: (MISRA-C:2004 1.1/R) Ensure strict ANSI C mode (-ps) is enabled
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 47: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("va_list")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 63: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("va_end")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 63: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 79: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("va_start")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 79: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 79: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "_ap" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 137: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("va_arg")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 137: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 137: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "_ap" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 137: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "_type" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 137: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "_ap" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 137: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "_ap" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 137: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "_ap" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 137: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "_ap" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 137: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "_type" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 137: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "_ap" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 137: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "_ap" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 137: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "_type" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 137: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "_ap" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 49: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 57: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 58: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 59: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 60: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 69: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("size_t")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 73: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 78: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 79: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("FILE")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 83: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fpos_t")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 93: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("_IOFBF")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 94: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("_IOLBF")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 95: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("_IONBF")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 107: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 108: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 109: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 110: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 111: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 116: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("BUFSIZ")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 118: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("FOPEN_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 118: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 119: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("FILENAME_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 120: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("TMP_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 127: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("stdin")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 128: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("stdout")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 129: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("stderr")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 132: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("L_tmpnam")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 132: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 135: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("SEEK_SET")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 136: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("SEEK_CUR")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 137: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("SEEK_END")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 140: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("NULL")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 144: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("EOF")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 166: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 166: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("remove")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 167: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 167: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("rename")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 168: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("tmpfile")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 169: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("tmpnam")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 174: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 174: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fclose")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 175: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fopen")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 176: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("freopen")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 178: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("setbuf")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 179: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 180: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 179: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("setvbuf")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 181: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 181: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fflush")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 186: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 186: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fprintf")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 188: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 188: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fscanf")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 190: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 190: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("printf")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 192: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 192: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("scanf")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 194: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 194: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("sprintf")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 196: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 199: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 199: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("sscanf")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 201: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 201: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("vfprintf")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 203: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 205: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 205: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("vprintf")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 207: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 209: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 209: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("vsprintf")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 212: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 215: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 221: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 221: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fgetc")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 222: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 222: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fgets")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 224: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 224: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 224: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fputc")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 225: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 225: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fputs")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 226: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 226: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("getc")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 227: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 227: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("getchar")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 228: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("gets")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 229: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 229: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 229: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("putc")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 230: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 230: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 230: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("putchar")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 231: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 231: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("puts")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 232: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 232: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 232: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("ungetc")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 237: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fread")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 239: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fwrite")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 245: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 245: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fgetpos")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 246: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 246: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 247: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 246: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fseek")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 248: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 248: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fsetpos")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 249: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 249: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("ftell")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 250: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("rewind")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 255: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("clearerr")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 256: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 256: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("feof")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 257: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 257: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("ferror")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 258: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("perror")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 260: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 260: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 261: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 261: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 262: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 264: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 266: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 55: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 56: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 57: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 58: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 62: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 62: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 62: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("div_t")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 64: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 64: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("quot")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 64: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 64: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("rem")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 64: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("ldiv_t")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 67: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 67: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("quot")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 67: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 67: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("rem")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 69: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("MB_CUR_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 83: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("wchar_t")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 87: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("EXIT_FAILURE")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 88: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("EXIT_SUCCESS")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 90: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("RAND_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 92: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 101: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 101: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 101: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("abs")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 101: warning: (MISRA-C:2004 16.4/R) The identifiers used in the declaration and definition of a function shall be identical
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 102: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 102: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 102: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("labs")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 102: warning: (MISRA-C:2004 16.4/R) The identifiers used in the declaration and definition of a function shall be identical
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 104: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 104: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 104: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 104: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 106: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 106: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("atoi")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 107: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 107: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("atol")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 109: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 109: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 111: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 111: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 112: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 112: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("atof")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 114: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 114: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 114: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("strtol")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 115: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 116: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 115: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("strtoul")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 118: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 118: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 118: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 119: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 119: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 120: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 122: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 123: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 123: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("strtod")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 124: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 124: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 126: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 126: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("rand")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 127: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("srand")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 129: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("calloc")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 131: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("malloc")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 133: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("realloc")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 135: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("free")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 139: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("abort")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 142: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 142: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("atexit")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 144: warning: (MISRA-C:2004 16.3/R) Identifiers shall be given for all of the parameters in a function prototype declaration
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 145: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("bsearch")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 148: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("qsort")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 151: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 151: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("exit")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 153: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 153: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 153: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("div")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 154: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 154: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 154: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("ldiv")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 156: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 156: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 156: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 156: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 159: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("getenv")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 160: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 160: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("system")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 162: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 162: warning: (MISRA-C:2004 16.3/R) Identifiers shall be given for all of the parameters in a function prototype declaration
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 162: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("mblen")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 163: warning: (MISRA-C:2004 16.3/R) Identifiers shall be given for all of the parameters in a function prototype declaration
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 163: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("mbstowcs")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 164: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 164: warning: (MISRA-C:2004 16.3/R) Identifiers shall be given for all of the parameters in a function prototype declaration
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 164: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("mbtowc")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 166: warning: (MISRA-C:2004 16.3/R) Identifiers shall be given for all of the parameters in a function prototype declaration
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 166: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("wcstombs")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 167: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 167: warning: (MISRA-C:2004 16.3/R) Identifiers shall be given for all of the parameters in a function prototype declaration
"/home/rtrk/Downloads/c6000_7.4.23/include/stdlib.h", line 167: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("wctomb")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdint.h", line 205: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdint.h", line 206: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdint.h", line 207: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdint.h", line 208: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdint.h", line 209: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdint.h", line 210: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdint.h", line 212: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdint.h", line 213: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdint.h", line 215: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdint.h", line 216: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdint.h", line 220: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdint.h", line 221: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/inttypes.h", line 45: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("quot")
"/home/rtrk/Downloads/c6000_7.4.23/include/inttypes.h", line 45: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("rem")
"/home/rtrk/Downloads/c6000_7.4.23/include/inttypes.h", line 53: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/_fmt_specifier.h", line 233: warning: (MISRA-C:2004 19.15/R) Precautions shall be taken in order to prevent the contents of a header file being included twice
"/home/rtrk/Downloads/c6000_7.4.23/include/inttypes.h", line 57: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/inttypes.h", line 62: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/inttypes.h", line 64: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 73: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 74: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 76: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 106: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 107: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 156: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 186: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 241: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 425: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 426: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 549: warning: (MISRA-C:2004 16.3/R) Identifiers shall be given for all of the parameters in a function prototype declaration
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 557: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 558: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 559: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 561: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 561: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "x" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 561: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 581: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 581: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 582: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 582: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 600: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 606: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 607: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 609: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 616: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 620: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 624: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 632: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 639: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 645: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 655: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 656: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 660: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 665: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 669: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 679: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 680: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 685: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 690: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 692: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 693: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 697: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 697: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "fun" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 697: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 713: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/yvals.h", line 715: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/_lock.h", line 47: warning: (MISRA-C:2004 16.5/R) Functions with no parameters shall be declared and defined with the parameter list void
"/home/rtrk/Downloads/c6000_7.4.23/include/_lock.h", line 49: warning: (MISRA-C:2004 16.5/R) Functions with no parameters shall be declared and defined with the parameter list void
"/home/rtrk/Downloads/c6000_7.4.23/include/_lock.h", line 50: warning: (MISRA-C:2004 16.5/R) Functions with no parameters shall be declared and defined with the parameter list void
"/home/rtrk/Downloads/c6000_7.4.23/include/_lock.h", line 52: warning: (MISRA-C:2004 16.5/R) Functions with no parameters shall be declared and defined with the parameter list void
"/home/rtrk/Downloads/c6000_7.4.23/include/_lock.h", line 53: warning: (MISRA-C:2004 16.5/R) Functions with no parameters shall be declared and defined with the parameter list void
"/home/rtrk/Downloads/c6000_7.4.23/include/stdbool.h", line 25: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 21: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"../unity_internals.h", line 15: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/setjmp.h", line 52: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("setjmp")
"/home/rtrk/Downloads/c6000_7.4.23/include/setjmp.h", line 52: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/setjmp.h", line 52: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/setjmp.h", line 55: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("jmp_buf")
"/home/rtrk/Downloads/c6000_7.4.23/include/setjmp.h", line 65: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/setjmp.h", line 68: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/setjmp.h", line 68: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("longjmp")
"../unity_internals.h", line 19: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 49: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("EDOM")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 57: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("ERANGE")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 61: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 46: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("FLT_RADIX")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 47: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("FLT_ROUNDS")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 49: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("FLT_DIG")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 50: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("FLT_MANT_DIG")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 51: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("FLT_MIN_EXP")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 51: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 52: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("FLT_MAX_EXP")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 53: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("FLT_MIN_10_EXP")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 53: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 54: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("FLT_MAX_10_EXP")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 55: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("FLT_EPSILON")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 56: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("FLT_MIN")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 57: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("FLT_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 59: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("DBL_DIG")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 60: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("DBL_MANT_DIG")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 61: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("DBL_MIN_EXP")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 61: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 62: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("DBL_MAX_EXP")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 63: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("DBL_MIN_10_EXP")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 63: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 64: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("DBL_MAX_10_EXP")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 65: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("DBL_EPSILON")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 66: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("DBL_MIN")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 67: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("DBL_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 69: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("LDBL_DIG")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 70: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("LDBL_MANT_DIG")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 71: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("LDBL_MIN_EXP")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 71: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 72: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("LDBL_MAX_EXP")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 73: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("LDBL_MIN_10_EXP")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 73: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 74: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("LDBL_MAX_10_EXP")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 75: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("LDBL_EPSILON")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 76: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("LDBL_MIN")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 77: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("LDBL_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 62: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("HUGE_VAL")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 62: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 63: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 65: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/access.h", line 40: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/access.h", line 41: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/access.h", line 42: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/access.h", line 48: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/access.h", line 50: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/access.h", line 51: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 66: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 69: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 70: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 71: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 72: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 76: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 76: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 76: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("sqrt")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 77: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 77: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 77: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("exp")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 78: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 78: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 78: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("log")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 79: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 79: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 79: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("log10")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 80: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 80: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 80: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 80: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("pow")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 81: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 81: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 81: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("sin")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 82: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 82: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 82: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("cos")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 83: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 83: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 83: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("tan")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 84: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 84: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 84: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("asin")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 85: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 85: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 85: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("acos")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 86: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 86: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 86: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("atan")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 87: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 87: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 87: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 87: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("atan2")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 88: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 88: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 88: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("sinh")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 89: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 89: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 89: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("cosh")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 90: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 90: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 90: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("tanh")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 92: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 92: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 92: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("ceil")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 93: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 93: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 93: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("floor")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 95: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 95: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 95: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fabs")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 95: warning: (MISRA-C:2004 16.4/R) The identifiers used in the declaration and definition of a function shall be identical
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 97: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 97: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 97: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 97: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("ldexp")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 98: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 98: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 98: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 98: warning: (MISRA-C:2004 5.2/R) Identifiers in an inner scope shall not use the same name as an identifier in an outer scope, and therefore hide that identifier ("exp")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 98: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("frexp")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 99: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 99: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 99: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 99: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("modf")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 100: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 100: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 100: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 100: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fmod")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 104: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 104: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 104: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 107: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 107: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 108: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 108: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 115: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 53: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 136: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 137: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 138: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 139: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 143: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 145: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 145: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 146: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 146: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 147: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 147: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 148: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 148: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 149: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 149: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 149: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 150: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 150: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 151: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 151: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 152: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 152: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 153: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 153: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 154: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 154: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 155: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 155: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 156: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 156: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 156: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 157: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 157: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 158: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 158: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 159: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 159: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 161: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 161: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 162: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 162: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 164: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 164: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 164: warning: (MISRA-C:2004 16.4/R) The identifiers used in the declaration and definition of a function shall be identical
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 166: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 166: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 166: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 167: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 167: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 167: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 167: warning: (MISRA-C:2004 5.2/R) Identifiers in an inner scope shall not use the same name as an identifier in an outer scope, and therefore hide that identifier ("exp")
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 168: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 168: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 168: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 169: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 169: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 169: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 173: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 173: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 173: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 176: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 176: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 177: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 177: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 186: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 188: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 188: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 189: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 189: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 190: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 190: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 191: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 191: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 193: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 193: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 193: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 195: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 195: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 196: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 196: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 197: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 197: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 197: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 199: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 199: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 201: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 201: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 202: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 202: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 203: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 203: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 204: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 204: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 213: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 213: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 216: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 216: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 217: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 217: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 218: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 218: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 219: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 219: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 221: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 224: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 227: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 231: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 235: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 239: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 240: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 311: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 116: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 53: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 54: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 63: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 64: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 65: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 66: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 67: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 68: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 71: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 72: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 73: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 74: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 75: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 76: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 77: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 78: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 79: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 81: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 82: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 84: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 86: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 87: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 88: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 96: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 96: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 96: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 96: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 96: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 96: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 110: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 112: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 113: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 114: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 115: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 116: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 117: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 118: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 119: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 120: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 121: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 122: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 123: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 124: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 125: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 126: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 127: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 128: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 129: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 130: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 131: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 137: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 138: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 139: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 140: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 118: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 131: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 131: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 132: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 132: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 133: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 133: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 134: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 134: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 136: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 136: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 136: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 138: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 138: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 139: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 139: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 140: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 140: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 140: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 142: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 142: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 144: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 144: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 145: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 145: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 146: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 146: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 147: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 147: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 156: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 156: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 159: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 159: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 160: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 160: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 161: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 161: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 162: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 162: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 164: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 167: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 170: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 174: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 178: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 182: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 183: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 286: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"../unity_internals.h", line 23: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/stddef.h", line 49: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("ptrdiff_t")
"/home/rtrk/Downloads/c6000_7.4.23/include/stddef.h", line 68: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("offsetof")
"/home/rtrk/Downloads/c6000_7.4.23/include/stddef.h", line 68: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stddef.h", line 68: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "_type" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/stddef.h", line 68: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "_ident" is used as an operand of # or ##.
"../unity_internals.h", line 36: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"../unity_internals.h", line 40: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 45: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("CHAR_BIT")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 46: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("SCHAR_MIN")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 46: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 47: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("SCHAR_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 48: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("UCHAR_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 49: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("CHAR_MIN")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 49: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 50: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("CHAR_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 50: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 51: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("MB_LEN_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 53: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("SHRT_MIN")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 53: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 54: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("SHRT_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 55: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("USHRT_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 57: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("INT_MIN")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 58: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("INT_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 59: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("UINT_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 66: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("LONG_MIN")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 67: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("LONG_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 68: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("ULONG_MAX")
"../unity_internals.h", line 55: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity_internals.h", line 57: warning: (MISRA-C:2004 10.6/R) A "U" suffix shall be applied to all constants of unsigned type
"../unity_internals.h", line 70: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity_internals.h", line 74: warning: (MISRA-C:2004 10.6/R) A "U" suffix shall be applied to all constants of unsigned type
"../unity_internals.h", line 85: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity_internals.h", line 87: warning: (MISRA-C:2004 10.6/R) A "U" suffix shall be applied to all constants of unsigned type
"../unity_internals.h", line 125: warning: (MISRA-C:2004 19.11/R) All macro identifiers in preprocessor directives shall be defined before use, except in #ifdef and #ifndef preprocessor directives and the defined() operator ("UNITY_LONG_WIDTH")
"../unity_internals.h", line 157: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 158: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 174: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 198: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 232: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 257: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"../unity_internals.h", line 257: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 57: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 58: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 59: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 60: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"../unity_internals.h", line 258: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 258: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 273: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 285: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 285: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 289: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 289: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 293: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 297: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 348: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 352: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 356: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 360: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 368: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 372: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 413: warning: (MISRA-C:2004 9.3/R) In an enumerator list, the '=' construct shall not be used to explicitly initialise members other than the first, unless all items are explicitly initialised
"../unity_internals.h", line 424: warning: (MISRA-C:2004 9.3/R) In an enumerator list, the '=' construct shall not be used to explicitly initialise members other than the first, unless all items are explicitly initialised
"../unity_internals.h", line 479: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity_internals.h", line 481: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity_internals.h", line 492: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 492: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 493: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 493: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 494: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 494: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 553: warning: (MISRA-C:2004 5.6/A) No identifier in one name space should have the same spelling as an identifier in another name space, with the exception of structure member and union member names ("flags")
"../unity_internals.h", line 577: warning: (MISRA-C:2004 5.6/A) No identifier in one name space should have the same spelling as an identifier in another name space, with the exception of structure member and union member names ("flags")
"../unity_internals.h", line 585: warning: (MISRA-C:2004 5.6/A) No identifier in one name space should have the same spelling as an identifier in another name space, with the exception of structure member and union member names ("flags")
"../unity_internals.h", line 601: warning: (MISRA-C:2004 5.6/A) No identifier in one name space should have the same spelling as an identifier in another name space, with the exception of structure member and union member names ("flags")
"../unity_internals.h", line 619: warning: (MISRA-C:2004 5.6/A) No identifier in one name space should have the same spelling as an identifier in another name space, with the exception of structure member and union member names ("flags")
"../unity_internals.h", line 653: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity_internals.h", line 663: warning: (MISRA-C:2004 8.12/R) When an array is declared with external linkage, its size shall be stated explicitly or defined implicitly by initialisation
"../unity_internals.h", line 664: warning: (MISRA-C:2004 8.12/R) When an array is declared with external linkage, its size shall be stated explicitly or defined implicitly by initialisation
"../unity_internals.h", line 665: warning: (MISRA-C:2004 8.12/R) When an array is declared with external linkage, its size shall be stated explicitly or defined implicitly by initialisation
"../unity_internals.h", line 666: warning: (MISRA-C:2004 8.12/R) When an array is declared with external linkage, its size shall be stated explicitly or defined implicitly by initialisation
"../unity_internals.h", line 668: warning: (MISRA-C:2004 8.12/R) When an array is declared with external linkage, its size shall be stated explicitly or defined implicitly by initialisation
"../unity_internals.h", line 669: warning: (MISRA-C:2004 8.12/R) When an array is declared with external linkage, its size shall be stated explicitly or defined implicitly by initialisation
"../unity_internals.h", line 670: warning: (MISRA-C:2004 8.12/R) When an array is declared with external linkage, its size shall be stated explicitly or defined implicitly by initialisation
"../unity_internals.h", line 671: warning: (MISRA-C:2004 8.12/R) When an array is declared with external linkage, its size shall be stated explicitly or defined implicitly by initialisation
"../unity_internals.h", line 678: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 679: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 679: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 706: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 706: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "func" is used as an operand of # or ##.
"../unity_internals.h", line 706: warning: (MISRA-C:2004 19.13/A) The # and ## operators should not be used
"../unity_internals.h", line 706: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 712: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 712: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 718: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 718: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 722: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 722: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 748: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 748: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 749: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 749: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 755: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 755: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 756: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 756: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 757: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 757: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 759: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 759: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 760: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 760: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 761: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 761: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 762: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 762: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 763: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 763: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 764: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 764: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 765: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 765: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 766: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 766: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 767: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 767: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 768: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 768: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 769: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 769: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 770: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 770: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 771: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 771: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 773: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 773: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 774: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 774: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 775: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 775: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 776: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 776: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 777: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 777: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 778: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 778: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 779: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 779: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 780: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 780: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 781: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 781: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 782: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 782: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 783: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 783: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 784: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 784: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 786: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 786: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 787: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 787: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 788: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 788: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 789: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 789: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 790: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 790: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 791: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 791: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 792: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 792: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 793: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 793: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 794: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 794: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 795: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 795: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 796: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 796: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 797: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 797: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 799: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 799: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 800: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 800: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 801: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 801: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 802: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 802: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 803: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 803: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 804: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 804: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 805: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 805: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 806: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 806: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 807: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 807: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 808: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 808: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 809: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 809: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 810: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 810: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 812: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 812: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 813: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 813: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 814: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 814: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 815: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 815: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 816: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 816: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 817: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 817: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 818: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 818: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 819: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 819: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 820: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 820: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 821: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 821: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 822: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 822: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 823: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 823: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 825: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 825: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 826: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 826: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 827: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 827: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 828: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 828: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 829: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 829: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 830: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 830: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 831: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 831: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 832: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 832: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 833: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 833: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 834: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 834: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 835: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 835: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 836: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 836: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 838: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 838: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 839: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 839: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 840: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 840: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 841: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 841: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 842: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 842: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 843: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 843: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 844: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 844: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 845: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 845: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 846: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 846: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 847: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 847: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 848: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 848: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 849: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 849: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 852: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 852: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 853: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 853: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 854: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 854: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 855: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 855: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 857: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 857: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 858: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 858: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 859: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 859: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 860: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 860: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 861: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 861: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 862: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 862: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 863: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 863: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 864: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 864: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 865: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 865: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 866: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 866: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 867: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 867: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 868: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 868: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 869: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 869: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 870: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 870: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 871: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 871: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 873: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 873: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 874: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 874: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 875: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 875: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 876: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 876: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 877: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 877: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 878: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 878: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 879: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 879: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 880: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 880: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 881: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 881: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 882: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 882: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 883: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 883: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 884: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 884: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 885: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 885: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 886: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 886: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 887: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 887: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 918: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 918: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 919: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 919: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 920: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 920: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 921: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 921: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 922: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 922: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 923: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 923: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 924: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 924: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 925: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 925: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 926: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 926: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 927: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 927: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 928: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 928: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 929: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 929: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 930: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 930: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 931: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 931: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 932: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 932: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 933: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 933: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 934: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 934: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 935: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 935: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 936: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 936: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 937: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 937: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 938: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 938: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 939: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 939: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 940: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 940: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 941: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 941: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 958: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 958: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 959: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 959: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 960: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 960: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 961: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 961: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 962: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 962: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 963: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 963: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 964: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 964: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 965: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 965: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 966: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 966: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 967: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 967: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 968: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 968: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 969: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 969: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 973: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 973: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 974: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 974: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 975: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 975: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 976: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 976: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 977: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 977: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 978: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 978: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 979: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 979: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 980: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 980: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 981: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 981: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 982: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 982: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 983: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 983: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 984: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 984: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 31: warning: (MISRA-C:2004 8.8/R) An external object or function shall be declared in one and only one file
"../unity.h", line 32: warning: (MISRA-C:2004 8.8/R) An external object or function shall be declared in one and only one file
"../unity.h", line 41: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.h", line 41: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.h", line 101: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 101: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 102: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 102: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 103: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 103: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 104: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 104: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 105: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 105: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 106: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 110: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 110: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 111: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 115: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 122: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 122: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 123: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 123: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 124: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 124: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 125: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 125: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 126: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 126: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 127: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 127: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 130: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 130: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 131: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 131: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 132: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 132: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 133: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 133: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 134: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 134: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 135: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 135: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 136: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 136: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 137: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 137: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 138: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 138: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 139: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 139: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 140: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 140: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 141: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 141: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 142: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 142: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 143: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 143: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 144: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 144: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 145: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 145: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 146: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 146: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 147: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 147: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 148: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 148: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 149: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 149: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 150: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 150: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 151: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 151: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 154: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 154: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 155: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 155: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 156: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 156: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 157: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 157: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 158: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 158: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 159: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 159: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 160: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 160: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 161: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 161: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 162: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 162: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 163: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 163: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 164: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 164: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 165: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 165: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 166: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 166: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 167: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 167: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 168: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 168: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 169: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 169: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 170: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 170: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 172: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 172: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 173: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 173: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 174: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 174: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 175: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 175: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 176: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 176: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 177: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 177: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 178: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 178: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 179: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 179: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 180: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 180: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 181: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 181: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 182: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 182: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 183: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 183: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 184: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 184: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 185: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 185: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 186: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 186: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 187: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 187: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 188: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 188: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 190: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 190: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 191: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 191: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 192: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 192: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 193: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 193: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 194: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 194: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 195: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 195: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 196: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 196: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 197: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 197: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 198: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 198: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 199: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 199: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 200: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 200: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 201: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 201: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 202: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 202: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 203: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 203: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 204: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 204: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 205: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 205: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 206: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 206: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 208: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 208: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 209: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 209: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 210: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 210: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 211: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 211: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 212: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 212: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 213: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 213: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 214: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 214: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 215: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 215: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 216: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 216: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 217: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 217: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 218: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 218: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 219: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 219: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 220: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 220: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 221: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 221: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 222: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 222: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 223: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 223: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 224: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 224: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 227: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 227: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 228: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 228: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 229: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 229: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 230: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 230: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 231: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 231: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 232: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 232: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 233: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 233: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 234: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 234: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 235: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 235: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 236: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 236: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 237: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 237: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 238: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 238: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 239: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 239: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 240: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 240: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 241: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 241: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 242: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 242: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 243: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 243: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 246: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 246: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 246: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 247: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 247: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 247: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 248: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 248: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 248: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 249: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 249: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 249: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 250: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 250: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 250: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 251: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 251: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 251: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 252: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 252: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 252: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 253: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 253: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 253: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 254: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 254: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 254: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 255: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 255: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 255: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 256: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 256: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 256: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 257: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 257: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 257: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 258: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 258: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 258: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 259: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 259: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 259: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 260: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 260: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 260: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 261: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 261: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 261: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 262: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 262: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 262: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 266: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 266: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 267: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 267: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 268: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 268: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 269: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 269: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 272: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 272: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 273: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 273: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 274: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 274: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 275: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 275: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 276: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 276: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 277: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 277: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 278: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 278: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 279: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 279: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 280: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 280: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 281: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 281: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 282: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 282: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 283: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 283: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 284: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 284: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 285: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 285: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 286: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 286: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 287: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 287: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 288: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 288: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 289: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 289: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 290: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 290: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 291: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 291: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 294: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 294: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 295: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 295: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 296: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 296: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 297: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 297: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 298: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 298: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 299: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 299: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 300: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 300: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 301: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 301: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 302: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 302: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 303: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 303: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 304: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 304: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 305: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 305: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 306: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 306: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 307: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 307: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 308: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 308: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 309: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 309: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 310: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 310: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 311: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 311: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 312: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 312: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 313: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 313: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 316: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 316: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 317: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 317: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 318: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 318: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 319: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 319: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 320: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 320: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 321: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 321: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 322: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 322: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 323: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 323: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 324: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 324: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 325: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 325: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 326: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 326: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 327: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 327: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 330: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 330: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 331: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 331: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 332: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 332: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 333: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 333: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 334: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 334: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 335: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 335: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 336: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 336: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 337: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 337: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 338: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 338: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 339: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 339: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 340: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 340: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 341: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 341: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 345: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 345: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 346: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 346: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 370: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 370: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 371: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 371: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 372: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 372: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 373: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 373: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 374: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 374: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 375: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 375: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 378: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 378: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 379: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 379: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 380: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 380: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 381: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 381: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 382: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 382: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 383: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 383: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 384: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 384: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 385: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 385: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 386: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 386: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 387: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 387: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 388: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 388: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 389: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 389: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 390: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 390: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 391: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 391: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 392: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 392: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 393: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 393: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 394: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 394: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 395: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 395: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 396: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 396: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 397: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 397: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 398: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 398: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 399: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 399: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 402: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 402: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 403: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 403: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 404: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 404: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 405: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 405: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 406: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 406: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 407: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 407: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 408: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 408: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 409: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 409: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 410: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 410: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 411: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 411: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 412: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 412: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 413: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 413: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 414: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 414: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 415: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 415: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 416: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 416: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 417: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 417: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 418: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 418: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 420: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 420: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 421: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 421: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 422: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 422: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 423: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 423: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 424: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 424: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 425: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 425: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 426: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 426: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 427: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 427: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 428: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 428: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 429: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 429: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 430: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 430: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 431: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 431: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 432: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 432: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 433: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 433: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 434: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 434: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 435: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 435: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 436: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 436: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 438: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 438: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 439: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 439: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 440: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 440: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 441: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 441: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 442: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 442: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 443: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 443: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 444: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 444: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 445: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 445: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 446: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 446: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 447: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 447: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 448: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 448: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 449: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 449: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 450: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 450: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 451: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 451: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 452: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 452: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 453: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 453: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 454: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 454: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 456: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 456: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 457: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 457: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 458: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 458: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 459: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 459: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 460: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 460: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 461: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 461: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 462: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 462: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 463: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 463: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 464: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 464: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 465: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 465: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 466: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 466: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 467: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 467: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 468: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 468: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 469: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 469: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 470: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 470: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 471: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 471: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 472: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 472: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 475: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 475: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 476: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 476: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 477: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 477: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 478: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 478: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 479: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 479: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 480: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 480: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 481: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 481: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 482: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 482: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 483: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 483: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 484: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 484: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 485: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 485: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 486: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 486: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 487: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 487: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 488: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 488: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 489: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 489: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 490: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 490: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 491: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 491: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 494: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 494: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 494: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 495: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 495: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 495: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 496: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 496: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 496: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 497: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 497: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 497: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 498: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 498: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 498: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 499: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 499: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 499: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 500: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 500: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 500: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 501: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 501: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 501: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 502: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 502: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 502: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 503: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 503: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 503: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 504: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 504: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 504: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 505: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 505: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 505: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 506: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 506: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 506: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 507: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 507: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 507: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 508: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 508: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 508: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 509: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 509: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 509: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 510: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 510: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 510: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 514: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 514: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 515: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 515: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 516: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 516: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 517: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 517: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 520: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 520: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 521: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 521: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 522: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 522: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
[unity.c]
"../unity.h", line 523: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 523: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 524: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 524: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 525: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 525: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 526: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 526: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 527: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 527: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 528: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 528: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 529: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 529: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 530: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 530: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 531: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 531: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 532: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 532: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 533: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 533: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 534: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 534: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 535: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 535: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 536: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 536: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 537: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 537: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 538: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 538: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 539: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 539: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 542: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 542: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 543: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 543: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 544: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 544: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 545: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 545: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 546: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 546: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 547: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 547: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 548: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 548: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 549: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 549: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 550: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 550: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 551: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 551: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 552: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 552: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 553: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 553: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 554: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 554: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 555: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 555: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 556: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 556: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 557: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 557: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 558: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 558: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 559: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 559: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 560: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 560: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 561: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 561: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 564: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 564: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 565: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 565: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 566: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 566: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 567: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 567: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 568: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 568: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 569: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 569: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 570: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 570: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 571: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 571: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 572: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 572: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 573: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 573: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 574: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 574: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 575: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 575: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 578: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 578: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 579: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 579: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 580: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 580: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 581: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 581: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 582: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 582: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 583: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 583: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 584: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 584: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 585: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 585: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 586: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 586: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 587: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 587: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 588: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 588: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 589: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 589: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 593: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 593: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 594: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 594: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../main.c", line 14: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../main.c", line 14: warning: (MISRA-C:2004 16.5/R) Functions with no parameters shall be declared and defined with the parameter list void
"../main.c", line 14: warning: (MISRA-C:2004 8.1/R) Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call
"../main.c", line 20: warning: (MISRA-C:2004 16.9/R) A function identifier shall only be used with either a preceding &, or with a parenthesised parameter list, which may be empty (function "ListIsEmptyAfterCreation")
"../main.c", line 21: warning: (MISRA-C:2004 16.9/R) A function identifier shall only be used with either a preceding &, or with a parenthesised parameter list, which may be empty (function "ListPushAndPopFrontTest")
"../main.c", line 22: warning: (MISRA-C:2004 16.9/R) A function identifier shall only be used with either a preceding &, or with a parenthesised parameter list, which may be empty (function "ListAppendAndPopBackTest")
"../main.c", line 23: warning: (MISRA-C:2004 16.9/R) A function identifier shall only be used with either a preceding &, or with a parenthesised parameter list, which may be empty (function "ListAppendTest")
"../main.c", line 24: warning: (MISRA-C:2004 16.9/R) A function identifier shall only be used with either a preceding &, or with a parenthesised parameter list, which may be empty (function "ListSortTest")
"../main.c", line 25: warning: (MISRA-C:2004 16.9/R) A function identifier shall only be used with either a preceding &, or with a parenthesised parameter list, which may be empty (function "ListArbitraryInsertionTest")
"../main.c", line 26: warning: (MISRA-C:2004 16.9/R) A function identifier shall only be used with either a preceding &, or with a parenthesised parameter list, which may be empty (function "ListSearchTest")
"../main.c", line 27: warning: (MISRA-C:2004 16.9/R) A function identifier shall only be used with either a preceding &, or with a parenthesised parameter list, which may be empty (function "ListArbitraryDeletionTest")
"../main.c", line 28: warning: (MISRA-C:2004 16.9/R) A function identifier shall only be used with either a preceding &, or with a parenthesised parameter list, which may be empty (function "ListIsEmptyAfterDestruction")
"../main.c", line 29: warning: (MISRA-C:2004 16.9/R) A function identifier shall only be used with either a preceding &, or with a parenthesised parameter list, which may be empty (function "MergeSortedTest")
"../unity.h", line 21: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"../unity_internals.h", line 15: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/linkage.h", line 56: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/linkage.h", line 60: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/linkage.h", line 72: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/linkage.h", line 74: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/setjmp.h", line 52: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("setjmp")
"/home/rtrk/Downloads/c6000_7.4.23/include/setjmp.h", line 52: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/setjmp.h", line 52: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/setjmp.h", line 55: warning: (MISRA-C:2004 1.1/R) Ensure strict ANSI C mode (-ps) is enabled
"/home/rtrk/Downloads/c6000_7.4.23/include/setjmp.h", line 55: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("jmp_buf")
"/home/rtrk/Downloads/c6000_7.4.23/include/setjmp.h", line 65: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/setjmp.h", line 68: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/setjmp.h", line 68: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("longjmp")
"../unity_internals.h", line 19: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 49: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("EDOM")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 57: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("ERANGE")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 61: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 46: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("FLT_RADIX")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 47: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("FLT_ROUNDS")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 49: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("FLT_DIG")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 50: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("FLT_MANT_DIG")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 51: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("FLT_MIN_EXP")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 51: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 52: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("FLT_MAX_EXP")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 53: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("FLT_MIN_10_EXP")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 53: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 54: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("FLT_MAX_10_EXP")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 55: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("FLT_EPSILON")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 56: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("FLT_MIN")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 57: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("FLT_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 59: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("DBL_DIG")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 60: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("DBL_MANT_DIG")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 61: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("DBL_MIN_EXP")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 61: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 62: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("DBL_MAX_EXP")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 63: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("DBL_MIN_10_EXP")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 63: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 64: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("DBL_MAX_10_EXP")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 65: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("DBL_EPSILON")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 66: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("DBL_MIN")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 67: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("DBL_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 69: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("LDBL_DIG")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 70: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("LDBL_MANT_DIG")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 71: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("LDBL_MIN_EXP")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 71: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 72: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("LDBL_MAX_EXP")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 73: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("LDBL_MIN_10_EXP")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 73: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 74: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("LDBL_MAX_10_EXP")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 75: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("LDBL_EPSILON")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 76: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("LDBL_MIN")
"/home/rtrk/Downloads/c6000_7.4.23/include/float.h", line 77: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("LDBL_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 62: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("HUGE_VAL")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 62: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 63: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 65: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/access.h", line 40: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/access.h", line 41: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/access.h", line 42: warning: (MISRA-C:2004 19.6/R) #undef shall not be used
"/home/rtrk/Downloads/c6000_7.4.23/include/access.h", line 48: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/access.h", line 50: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/access.h", line 51: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 66: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 69: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 70: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 71: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 72: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 76: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 76: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 76: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("sqrt")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 77: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 77: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 77: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("exp")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 78: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 78: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 78: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("log")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 79: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 79: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 79: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("log10")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 80: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 80: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 80: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 80: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("pow")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 81: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 81: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 81: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("sin")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 82: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 82: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 82: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("cos")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 83: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 83: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 83: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("tan")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 84: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 84: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 84: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("asin")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 85: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 85: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 85: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("acos")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 86: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 86: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 86: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("atan")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 87: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 87: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 87: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 87: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("atan2")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 88: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 88: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 88: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("sinh")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 89: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 89: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 89: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("cosh")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 90: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 90: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 90: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("tanh")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 92: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 92: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 92: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("ceil")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 93: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 93: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 93: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("floor")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 95: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 95: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 95: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fabs")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 95: warning: (MISRA-C:2004 16.4/R) The identifiers used in the declaration and definition of a function shall be identical
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 97: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 97: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 97: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 97: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("ldexp")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 98: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 98: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 98: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 98: warning: (MISRA-C:2004 5.2/R) Identifiers in an inner scope shall not use the same name as an identifier in an outer scope, and therefore hide that identifier ("exp")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 98: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("frexp")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 99: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 99: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 99: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 99: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("modf")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 100: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 100: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 100: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 100: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fmod")
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 104: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 104: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 104: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 107: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 107: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 108: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 108: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 115: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 53: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 136: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 137: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 138: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 139: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 143: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 145: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 145: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 146: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 146: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 147: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 147: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 148: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 148: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 149: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 149: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 149: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 150: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 150: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 151: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 151: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 152: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 152: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 153: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 153: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 154: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 154: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 155: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 155: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 156: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 156: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 156: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 157: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 157: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 158: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 158: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 159: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 159: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 161: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 161: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 162: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 162: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 164: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 164: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 164: warning: (MISRA-C:2004 16.4/R) The identifiers used in the declaration and definition of a function shall be identical
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 166: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 166: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 166: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 167: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 167: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 167: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 167: warning: (MISRA-C:2004 5.2/R) Identifiers in an inner scope shall not use the same name as an identifier in an outer scope, and therefore hide that identifier ("exp")
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 168: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 168: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 168: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 169: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 169: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 169: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 173: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 173: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 173: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 176: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 176: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 177: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 177: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 186: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 188: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 188: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 189: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 189: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 190: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 190: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 191: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 191: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 193: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 193: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 193: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 195: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 195: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 196: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 196: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 197: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 197: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 197: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 199: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 199: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 201: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 201: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 202: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 202: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 203: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 203: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 204: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 204: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 213: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 213: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 216: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 216: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 217: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 217: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 218: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 218: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 219: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 219: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 221: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 224: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 227: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 231: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 235: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 239: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 240: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathf.h", line 311: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 116: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 53: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 54: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 63: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 64: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 65: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 66: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 67: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 68: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 71: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 72: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 73: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 74: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 75: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 76: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 77: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 78: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 79: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 81: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 82: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 84: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 86: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 87: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 88: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 96: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 96: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 96: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 96: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 96: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 96: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 110: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 112: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 113: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 114: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 115: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 116: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 117: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 118: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 119: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 120: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 121: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 122: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 123: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 124: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 125: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 126: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 127: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 128: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 129: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 130: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 131: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 137: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 138: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 139: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/mathl.h", line 140: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 118: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 131: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 131: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 132: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 132: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 133: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 133: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 134: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 134: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 136: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 136: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 136: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 138: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 138: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 139: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 139: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 140: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 140: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 140: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 142: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 142: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 144: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 144: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 145: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 145: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 146: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 146: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 147: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 147: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 156: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 156: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 159: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 159: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 160: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 160: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 161: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 161: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 162: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 162: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 164: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 167: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 170: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 174: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 178: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 182: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 183: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/math.h", line 286: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"../unity_internals.h", line 23: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/stddef.h", line 46: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("NULL")
"/home/rtrk/Downloads/c6000_7.4.23/include/stddef.h", line 49: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("ptrdiff_t")
"/home/rtrk/Downloads/c6000_7.4.23/include/stddef.h", line 53: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("size_t")
"/home/rtrk/Downloads/c6000_7.4.23/include/stddef.h", line 60: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("wchar_t")
"/home/rtrk/Downloads/c6000_7.4.23/include/stddef.h", line 68: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("offsetof")
"/home/rtrk/Downloads/c6000_7.4.23/include/stddef.h", line 68: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stddef.h", line 68: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "_type" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/stddef.h", line 68: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "_ident" is used as an operand of # or ##.
"../unity_internals.h", line 36: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/stdint.h", line 205: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdint.h", line 206: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdint.h", line 207: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdint.h", line 208: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdint.h", line 209: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdint.h", line 210: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdint.h", line 212: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdint.h", line 213: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdint.h", line 215: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdint.h", line 216: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdint.h", line 220: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdint.h", line 221: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 40: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 45: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("CHAR_BIT")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 46: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("SCHAR_MIN")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 46: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 47: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("SCHAR_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 48: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("UCHAR_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 49: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("CHAR_MIN")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 49: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 50: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("CHAR_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 50: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 51: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("MB_LEN_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 53: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("SHRT_MIN")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 53: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 54: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("SHRT_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 55: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("USHRT_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 57: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("INT_MIN")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 58: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("INT_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 59: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("UINT_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 66: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("LONG_MIN")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 67: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("LONG_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/limits.h", line 68: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("ULONG_MAX")
"../unity_internals.h", line 55: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity_internals.h", line 57: warning: (MISRA-C:2004 10.6/R) A "U" suffix shall be applied to all constants of unsigned type
"../unity_internals.h", line 70: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity_internals.h", line 74: warning: (MISRA-C:2004 10.6/R) A "U" suffix shall be applied to all constants of unsigned type
"../unity_internals.h", line 85: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity_internals.h", line 87: warning: (MISRA-C:2004 10.6/R) A "U" suffix shall be applied to all constants of unsigned type
"../unity_internals.h", line 125: warning: (MISRA-C:2004 19.11/R) All macro identifiers in preprocessor directives shall be defined before use, except in #ifdef and #ifndef preprocessor directives and the defined() operator ("UNITY_LONG_WIDTH")
"../unity_internals.h", line 157: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 158: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 174: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 198: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 232: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 257: warning: (MISRA-C:2004 19.1/A) #include statements in a file should only be preceded by other preprocessor directives or comments
"../unity_internals.h", line 257: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 47: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("va_list")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 63: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("va_end")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 63: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 79: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("va_start")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 79: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 79: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "_ap" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 137: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("va_arg")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 137: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 137: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "_ap" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 137: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "_type" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 137: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "_ap" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 137: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "_ap" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 137: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "_ap" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 137: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "_ap" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 137: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "_type" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 137: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "_ap" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 137: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "_ap" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 137: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "_type" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/stdarg.h", line 137: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "_ap" is used as an operand of # or ##.
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 49: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 57: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 58: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 59: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 60: warning: (MISRA-C:2004 2.2/R) Source code shall only use /* ... */ style comments
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 73: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 78: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 79: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("FILE")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 83: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fpos_t")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 93: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("_IOFBF")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 94: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("_IOLBF")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 95: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("_IONBF")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 107: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 108: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 109: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 110: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 111: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 116: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("BUFSIZ")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 118: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("FOPEN_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 118: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 119: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("FILENAME_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 120: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("TMP_MAX")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 127: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("stdin")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 128: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("stdout")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 129: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("stderr")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 132: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("L_tmpnam")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 132: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 135: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("SEEK_SET")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 136: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("SEEK_CUR")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 137: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("SEEK_END")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 144: warning: (MISRA-C:2004 20.1/R) Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined ("EOF")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 166: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 166: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("remove")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 167: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 167: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("rename")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 168: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("tmpfile")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 169: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("tmpnam")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 174: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 174: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fclose")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 175: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fopen")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 176: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("freopen")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 178: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("setbuf")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 179: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 180: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 179: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("setvbuf")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 181: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 181: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fflush")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 186: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 186: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fprintf")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 188: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 188: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fscanf")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 190: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 190: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("printf")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 192: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 192: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("scanf")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 194: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 194: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("sprintf")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 196: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 199: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 199: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("sscanf")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 201: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 201: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("vfprintf")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 203: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 205: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 205: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("vprintf")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 207: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 209: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 209: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("vsprintf")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 212: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 215: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 221: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 221: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fgetc")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 222: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 222: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fgets")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 224: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 224: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 224: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fputc")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 225: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 225: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fputs")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 226: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 226: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("getc")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 227: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 227: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("getchar")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 228: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("gets")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 229: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 229: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 229: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("putc")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 230: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 230: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 230: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("putchar")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 231: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 231: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("puts")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 232: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 232: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 232: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("ungetc")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 237: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fread")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 239: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fwrite")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 245: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 245: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fgetpos")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 246: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 246: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 247: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 246: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fseek")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 248: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 248: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("fsetpos")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 249: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 249: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("ftell")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 250: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("rewind")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 255: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("clearerr")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 256: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 256: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("feof")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 257: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 257: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("ferror")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 258: warning: (MISRA-C:2004 20.2/R) The names of standard library macros, objects and functions shall not be reused ("perror")
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 260: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 260: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 261: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 261: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 262: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 264: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"/home/rtrk/Downloads/c6000_7.4.23/include/stdio.h", line 266: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 258: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 258: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 273: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 285: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 285: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 289: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 289: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 293: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 297: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 348: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 352: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 356: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 360: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 368: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 372: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 413: warning: (MISRA-C:2004 9.3/R) In an enumerator list, the '=' construct shall not be used to explicitly initialise members other than the first, unless all items are explicitly initialised
"../unity_internals.h", line 424: warning: (MISRA-C:2004 9.3/R) In an enumerator list, the '=' construct shall not be used to explicitly initialise members other than the first, unless all items are explicitly initialised
"../unity_internals.h", line 479: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity_internals.h", line 481: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity_internals.h", line 492: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 492: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 493: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 493: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 494: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 494: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 553: warning: (MISRA-C:2004 5.6/A) No identifier in one name space should have the same spelling as an identifier in another name space, with the exception of structure member and union member names ("flags")
"../unity_internals.h", line 577: warning: (MISRA-C:2004 5.6/A) No identifier in one name space should have the same spelling as an identifier in another name space, with the exception of structure member and union member names ("flags")
"../unity_internals.h", line 585: warning: (MISRA-C:2004 5.6/A) No identifier in one name space should have the same spelling as an identifier in another name space, with the exception of structure member and union member names ("flags")
"../unity_internals.h", line 601: warning: (MISRA-C:2004 5.6/A) No identifier in one name space should have the same spelling as an identifier in another name space, with the exception of structure member and union member names ("flags")
"../unity_internals.h", line 619: warning: (MISRA-C:2004 5.6/A) No identifier in one name space should have the same spelling as an identifier in another name space, with the exception of structure member and union member names ("flags")
"../unity_internals.h", line 653: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity_internals.h", line 663: warning: (MISRA-C:2004 8.12/R) When an array is declared with external linkage, its size shall be stated explicitly or defined implicitly by initialisation
"../unity_internals.h", line 664: warning: (MISRA-C:2004 8.12/R) When an array is declared with external linkage, its size shall be stated explicitly or defined implicitly by initialisation
"../unity_internals.h", line 665: warning: (MISRA-C:2004 8.12/R) When an array is declared with external linkage, its size shall be stated explicitly or defined implicitly by initialisation
"../unity_internals.h", line 666: warning: (MISRA-C:2004 8.12/R) When an array is declared with external linkage, its size shall be stated explicitly or defined implicitly by initialisation
"../unity_internals.h", line 668: warning: (MISRA-C:2004 8.12/R) When an array is declared with external linkage, its size shall be stated explicitly or defined implicitly by initialisation
"../unity_internals.h", line 669: warning: (MISRA-C:2004 8.12/R) When an array is declared with external linkage, its size shall be stated explicitly or defined implicitly by initialisation
"../unity_internals.h", line 670: warning: (MISRA-C:2004 8.12/R) When an array is declared with external linkage, its size shall be stated explicitly or defined implicitly by initialisation
"../unity_internals.h", line 671: warning: (MISRA-C:2004 8.12/R) When an array is declared with external linkage, its size shall be stated explicitly or defined implicitly by initialisation
"../unity_internals.h", line 678: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 679: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 679: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 706: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 706: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "func" is used as an operand of # or ##.
"../unity_internals.h", line 706: warning: (MISRA-C:2004 19.13/A) The # and ## operators should not be used
"../unity_internals.h", line 706: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 712: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 712: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 718: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 718: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 722: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 722: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 748: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 748: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 749: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 749: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 755: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 755: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 756: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 756: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 757: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 757: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 759: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 759: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 760: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 760: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 761: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 761: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 762: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 762: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 763: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 763: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 764: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 764: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 765: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 765: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 766: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 766: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 767: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 767: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 768: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 768: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 769: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 769: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 770: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 770: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 771: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 771: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 773: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 773: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 774: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 774: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 775: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 775: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 776: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 776: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 777: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 777: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 778: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 778: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 779: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 779: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 780: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 780: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 781: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 781: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 782: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 782: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 783: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 783: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 784: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 784: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 786: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 786: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 787: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 787: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 788: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 788: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 789: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 789: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 790: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 790: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 791: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 791: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 792: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 792: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 793: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 793: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 794: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 794: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 795: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 795: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 796: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 796: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 797: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 797: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 799: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 799: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 800: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 800: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 801: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 801: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 802: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 802: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 803: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 803: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 804: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 804: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 805: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 805: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 806: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 806: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 807: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 807: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 808: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 808: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 809: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 809: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 810: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 810: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 812: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 812: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 813: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 813: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 814: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 814: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 815: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 815: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 816: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 816: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 817: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 817: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 818: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 818: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 819: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 819: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 820: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 820: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 821: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 821: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 822: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 822: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 823: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 823: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 825: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 825: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 826: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 826: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 827: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 827: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 828: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 828: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 829: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 829: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 830: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 830: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 831: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 831: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 832: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 832: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 833: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 833: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 834: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 834: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 835: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 835: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 836: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 836: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 838: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 838: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 839: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 839: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 840: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 840: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 841: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 841: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 842: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 842: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 843: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 843: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 844: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 844: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 845: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 845: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 846: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 846: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 847: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 847: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 848: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 848: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 849: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 849: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 852: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 852: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 853: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 853: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 854: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 854: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 855: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 855: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 857: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 857: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 858: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 858: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 859: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 859: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 860: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 860: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 861: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 861: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 862: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 862: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 863: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 863: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 864: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 864: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 865: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 865: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 866: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 866: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 867: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 867: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 868: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 868: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 869: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 869: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 870: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 870: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 871: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 871: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 873: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 873: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 874: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 874: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 875: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 875: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 876: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 876: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 877: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 877: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 878: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 878: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 879: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 879: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 880: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 880: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 881: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 881: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 882: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 882: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 883: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 883: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 884: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 884: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 885: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 885: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 886: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 886: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 887: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 887: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 918: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 918: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 919: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 919: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 920: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 920: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 921: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 921: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 922: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 922: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 923: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 923: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 924: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 924: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 925: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 925: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 926: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 926: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 927: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 927: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 928: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 928: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 929: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 929: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 930: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 930: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 931: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 931: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 932: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 932: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 933: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 933: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 934: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 934: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 935: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 935: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 936: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 936: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 937: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 937: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 938: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 938: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 939: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 939: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 940: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 940: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 941: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 941: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 958: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 958: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 959: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 959: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 960: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 960: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 961: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 961: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 962: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 962: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 963: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 963: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 964: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 964: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 965: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 965: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 966: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 966: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 967: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 967: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 968: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 968: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 969: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 969: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 973: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 973: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 974: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 974: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 975: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 975: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 976: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 976: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 977: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 977: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 978: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 978: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 979: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 979: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 980: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 980: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 981: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 981: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 982: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 982: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 983: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 983: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity_internals.h", line 984: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity_internals.h", line 984: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 41: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.h", line 41: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.h", line 101: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 101: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 102: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 102: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 103: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 103: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 104: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 104: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 105: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 105: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 106: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 110: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 110: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 111: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 115: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 122: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 122: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 123: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 123: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 124: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 124: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 125: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 125: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 126: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 126: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 127: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 127: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 130: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 130: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 131: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 131: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 132: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 132: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 133: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 133: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 134: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 134: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 135: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 135: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 136: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 136: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 137: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 137: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 138: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 138: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 139: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 139: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 140: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 140: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 141: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 141: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 142: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 142: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 143: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 143: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 144: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 144: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 145: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 145: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 146: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 146: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 147: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 147: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 148: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 148: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 149: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 149: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 150: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 150: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 151: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 151: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 154: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 154: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 155: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 155: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 156: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 156: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 157: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 157: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 158: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 158: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 159: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 159: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 160: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 160: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 161: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 161: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 162: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 162: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 163: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 163: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 164: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 164: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 165: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 165: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 166: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 166: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 167: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 167: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 168: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 168: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 169: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 169: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 170: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 170: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 172: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 172: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 173: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 173: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 174: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 174: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 175: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 175: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 176: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 176: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 177: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 177: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 178: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 178: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 179: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 179: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 180: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 180: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 181: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 181: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 182: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 182: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 183: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 183: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 184: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 184: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 185: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 185: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 186: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 186: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 187: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 187: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 188: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 188: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 190: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 190: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 191: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 191: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 192: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 192: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 193: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 193: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 194: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 194: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 195: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 195: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 196: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 196: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 197: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 197: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 198: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 198: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 199: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 199: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 200: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 200: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 201: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 201: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 202: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 202: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 203: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 203: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 204: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 204: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 205: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 205: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 206: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 206: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 208: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 208: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 209: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 209: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 210: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 210: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 211: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 211: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 212: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 212: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 213: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 213: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 214: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 214: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 215: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 215: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 216: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 216: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 217: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 217: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 218: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 218: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 219: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 219: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 220: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 220: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 221: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 221: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 222: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 222: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 223: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 223: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 224: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 224: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 227: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 227: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 228: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 228: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 229: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 229: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 230: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 230: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 231: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 231: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 232: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 232: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 233: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 233: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 234: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 234: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 235: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 235: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 236: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 236: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 237: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 237: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 238: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 238: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 239: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 239: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 240: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 240: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 241: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 241: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 242: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 242: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 243: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 243: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 246: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 246: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 246: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 247: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 247: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 247: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 248: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 248: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 248: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 249: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 249: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 249: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 250: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 250: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 250: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 251: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 251: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 251: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 252: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 252: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 252: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 253: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 253: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 253: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 254: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 254: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 254: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 255: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 255: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 255: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 256: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 256: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 256: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 257: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 257: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 257: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 258: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 258: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 258: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 259: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 259: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 259: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 260: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 260: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 260: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 261: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 261: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 261: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 262: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 262: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 262: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 266: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 266: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 267: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 267: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 268: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 268: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 269: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 269: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 272: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 272: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 273: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 273: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 274: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 274: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 275: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 275: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 276: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 276: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 277: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 277: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 278: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 278: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 279: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 279: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 280: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 280: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 281: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 281: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 282: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 282: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 283: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 283: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 284: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 284: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 285: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 285: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 286: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 286: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 287: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 287: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 288: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 288: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 289: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 289: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 290: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 290: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 291: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 291: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 294: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 294: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 295: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 295: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 296: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 296: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 297: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 297: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 298: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 298: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 299: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 299: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 300: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 300: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 301: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 301: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 302: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 302: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 303: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 303: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 304: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 304: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 305: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 305: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 306: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 306: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 307: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 307: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 308: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 308: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 309: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 309: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 310: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 310: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 311: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 311: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 312: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 312: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 313: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 313: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 316: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 316: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 317: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 317: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 318: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 318: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 319: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 319: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 320: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 320: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 321: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 321: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 322: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 322: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 323: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 323: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 324: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 324: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 325: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 325: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 326: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 326: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 327: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 327: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 330: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 330: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 331: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 331: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 332: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 332: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 333: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 333: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 334: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 334: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 335: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 335: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 336: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 336: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 337: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 337: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 338: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 338: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 339: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 339: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 340: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 340: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 341: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 341: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 345: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 345: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 346: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 346: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 370: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 370: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 371: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 371: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 372: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 372: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 373: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 373: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 374: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 374: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 375: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 375: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 378: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 378: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 379: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 379: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 380: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 380: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 381: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 381: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 382: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 382: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 383: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 383: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 384: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 384: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 385: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 385: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 386: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 386: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 387: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 387: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 388: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 388: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 389: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 389: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 390: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 390: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 391: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 391: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 392: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 392: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 393: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 393: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 394: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 394: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 395: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 395: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 396: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 396: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 397: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 397: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 398: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 398: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 399: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 399: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 402: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 402: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 403: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 403: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 404: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 404: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 405: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 405: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 406: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 406: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 407: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 407: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 408: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 408: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 409: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 409: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 410: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 410: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 411: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 411: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 412: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 412: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 413: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 413: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 414: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 414: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 415: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 415: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 416: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 416: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 417: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 417: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 418: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 418: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 420: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 420: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 421: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 421: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 422: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 422: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 423: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 423: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 424: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 424: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 425: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 425: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 426: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 426: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 427: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 427: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 428: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 428: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 429: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 429: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 430: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 430: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 431: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 431: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 432: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 432: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 433: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 433: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 434: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 434: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 435: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 435: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 436: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 436: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 438: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 438: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 439: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 439: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 440: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 440: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 441: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 441: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 442: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 442: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 443: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 443: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 444: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 444: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 445: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 445: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 446: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 446: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 447: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 447: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 448: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 448: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 449: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 449: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 450: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 450: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 451: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 451: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 452: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 452: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 453: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 453: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 454: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 454: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 456: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 456: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 457: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 457: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 458: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 458: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 459: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 459: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 460: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 460: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 461: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 461: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 462: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 462: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 463: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 463: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 464: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 464: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 465: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 465: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 466: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 466: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 467: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 467: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 468: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 468: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 469: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 469: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 470: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 470: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 471: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 471: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 472: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 472: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 475: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 475: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 476: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 476: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 477: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 477: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 478: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 478: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 479: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 479: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 480: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 480: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 481: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 481: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 482: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 482: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 483: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 483: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 484: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 484: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 485: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 485: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 486: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 486: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 487: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 487: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 488: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 488: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 489: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 489: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 490: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 490: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 491: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 491: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 494: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 494: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 494: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 495: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 495: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 495: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 496: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 496: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 496: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 497: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 497: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 497: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 498: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 498: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 498: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 499: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 499: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 499: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 500: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 500: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 500: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 501: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 501: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 501: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 502: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 502: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 502: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 503: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 503: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 503: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 504: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 504: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 504: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 505: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 505: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 505: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 506: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 506: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 506: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 507: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 507: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 507: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 508: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 508: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 508: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 509: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 509: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 509: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 510: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 510: warning: (MISRA-C:2004 19.10/R) In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##. The compiler cannot determine if the parameter "num_elements" is used as an operand of # or ##.
"../unity.h", line 510: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 514: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 514: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 515: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 515: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 516: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 516: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 517: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 517: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 520: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 520: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 521: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 521: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 522: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 522: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 523: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 523: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 524: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 524: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 525: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 525: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 526: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 526: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 527: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 527: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 528: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 528: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 529: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 529: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 530: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 530: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 531: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 531: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 532: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 532: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 533: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 533: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 534: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 534: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 535: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 535: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 536: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 536: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 537: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 537: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 538: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 538: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 539: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 539: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 542: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 542: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 543: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 543: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 544: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 544: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 545: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 545: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 546: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 546: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 547: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 547: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 548: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 548: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 549: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 549: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 550: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 550: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 551: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 551: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 552: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 552: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 553: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 553: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 554: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 554: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 555: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 555: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 556: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 556: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 557: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 557: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 558: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 558: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 559: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 559: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 560: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 560: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 561: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 561: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 564: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 564: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 565: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 565: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 566: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 566: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 567: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 567: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 568: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 568: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 569: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 569: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 570: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 570: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 571: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 571: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 572: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 572: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 573: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 573: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 574: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 574: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 575: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 575: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 578: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 578: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 579: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 579: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 580: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 580: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 581: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 581: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 582: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 582: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 583: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 583: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 584: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 584: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 585: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 585: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 586: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 586: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 587: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 587: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 588: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 588: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 589: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 589: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 593: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 593: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.h", line 594: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.h", line 594: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"/home/rtrk/Downloads/c6000_7.4.23/include/stddef.h", line 90: warning: (MISRA-C:2004 19.15/R) Precautions shall be taken in order to prevent the contents of a header file being included twice
"../unity.c", line 22: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.c", line 23: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.c", line 24: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.c", line 29: warning: (MISRA-C:2004 7.1/R) Octal constants (other than zero) and octal escape sequences shall not be used
"../unity.c", line 29: warning: (MISRA-C:2004 7.1/R) Octal constants (other than zero) and octal escape sequences shall not be used
"../unity.c", line 30: warning: (MISRA-C:2004 7.1/R) Octal constants (other than zero) and octal escape sequences shall not be used
"../unity.c", line 30: warning: (MISRA-C:2004 7.1/R) Octal constants (other than zero) and octal escape sequences shall not be used
"../unity.c", line 31: warning: (MISRA-C:2004 7.1/R) Octal constants (other than zero) and octal escape sequences shall not be used
"../unity.c", line 31: warning: (MISRA-C:2004 7.1/R) Octal constants (other than zero) and octal escape sequences shall not be used
"../unity.c", line 32: warning: (MISRA-C:2004 7.1/R) Octal constants (other than zero) and octal escape sequences shall not be used
"../unity.c", line 32: warning: (MISRA-C:2004 7.1/R) Octal constants (other than zero) and octal escape sequences shall not be used
"../unity.c", line 78: warning: (MISRA-C:2004 8.1/R) Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call
"../unity.c", line 81: warning: (MISRA-C:2004 6.1/R) The plain char type shall be used only for the storage and use of character values
"../unity.c", line 83: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 86: warning: (MISRA-C:2004 6.1/R) The plain char type shall be used only for the storage and use of character values
"../unity.c", line 88: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 89: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 92: warning: (MISRA-C:2004 6.1/R) The plain char type shall be used only for the storage and use of character values
"../unity.c", line 94: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 95: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 100: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 101: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 130: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("pch")
"../unity.c", line 145: warning: (MISRA-C:2004 17.4/R) Array indexing shall be the only allowed form of pointer arithmetic
"../unity.c", line 267: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("pch")
"../unity.c", line 271: warning: (MISRA-C:2004 17.4/R) Array indexing shall be the only allowed form of pointer arithmetic
"../unity.c", line 271: warning: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../unity.c", line 271: warning: (MISRA-C:2004 12.6/A) The operands of logical operators (&&, || and !) should be effectively Boolean
"../unity.c", line 271: warning: (MISRA-C:2004 6.1/R) The plain char type shall be used only for the storage and use of character values
"../unity.c", line 274: warning: (MISRA-C:2004 6.1/R) The plain char type shall be used only for the storage and use of character values
"../unity.c", line 276: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 279: warning: (MISRA-C:2004 6.1/R) The plain char type shall be used only for the storage and use of character values
"../unity.c", line 281: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 282: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 285: warning: (MISRA-C:2004 6.1/R) The plain char type shall be used only for the storage and use of character values
"../unity.c", line 287: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 288: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 293: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 294: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 297: warning: (MISRA-C:2004 17.4/R) Array indexing shall be the only allowed form of pointer arithmetic
"../unity.c", line 305: warning: (MISRA-C:2004 12.7/R) Bitwise operators shall not be applied to operands whose underlying type is signed
"../unity.c", line 310: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 313: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 313: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.c", line 318: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 319: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 324: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 325: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 330: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 331: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 334: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 341: warning: (MISRA-C:2004 12.7/R) Bitwise operators shall not be applied to operands whose underlying type is signed
"../unity.c", line 345: warning: (MISRA-C:2004 12.7/R) Bitwise operators shall not be applied to operands whose underlying type is signed
"../unity.c", line 351: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 352: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 353: warning: (MISRA-C:2004 12.7/R) Bitwise operators shall not be applied to operands whose underlying type is signed
"../unity.c", line 360: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("number")
"../unity.c", line 365: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 366: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 375: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 378: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 378: warning: (MISRA-C:2004 12.1/A) Limited dependence should be placed on C's operator precedence rules in expressions
"../unity.c", line 380: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 386: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 386: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 386: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is complex
"../unity.c", line 386: warning: (MISRA-C:2004 10.3/R) The value of a complex expression of integer type shall only be cast to a type of the same signedness that is no wider than the underlying type of the expression
"../unity.c", line 386: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
"../unity.c", line 386: warning: (MISRA-C:2004 6.1/R) The plain char type shall be used only for the storage and use of character values
"../unity.c", line 386: warning: (MISRA-C:2004 12.1/A) Limited dependence should be placed on C's operator precedence rules in expressions
"../unity.c", line 387: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 388: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 394: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.c", line 397: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 399: warning: (MISRA-C:2004 6.1/R) The plain char type shall be used only for the storage and use of character values
"../unity.c", line 402: warning: (MISRA-C:2004 6.1/R) The plain char type shall be used only for the storage and use of character values
"../unity.c", line 404: warning: (MISRA-C:2004 6.1/R) The plain char type shall be used only for the storage and use of character values
"../unity.c", line 405: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.c", line 405: warning: (MISRA-C:2004 10.3/R) The value of a complex expression of integer type shall only be cast to a type of the same signedness that is no wider than the underlying type of the expression
"../unity.c", line 405: warning: (MISRA-C:2004 12.7/R) Bitwise operators shall not be applied to operands whose underlying type is signed
"../unity.c", line 405: warning: (MISRA-C:2004 6.1/R) The plain char type shall be used only for the storage and use of character values
"../unity.c", line 408: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 408: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
"../unity.c", line 408: warning: (MISRA-C:2004 6.1/R) The plain char type shall be used only for the storage and use of character values
"../unity.c", line 412: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 412: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is not constant and is a function argument
"../unity.c", line 412: warning: (MISRA-C:2004 6.1/R) The plain char type shall be used only for the storage and use of character values
"../unity.c", line 421: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("i")
"../unity.c", line 429: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 433: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 438: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 460: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.c", line 465: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("number")
"../unity.c", line 470: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 475: warning: (MISRA-C:2004 13.3/R) Floating-point expressions shall not be tested for equality or inequality
"../unity.c", line 479: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.c", line 479: warning: (MISRA-C:2004 10.2/R) The value of an expression of floating type shall not be implicitly converted to a different type if the expression is a function argument
"../unity.c", line 479: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.c", line 479: warning: (MISRA-C:2004 10.2/R) The value of an expression of floating type shall not be implicitly converted to a different type if the expression is a function argument
"../unity.c", line 483: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.c", line 483: warning: (MISRA-C:2004 10.2/R) The value of an expression of floating type shall not be implicitly converted to a different type if the expression is a function argument
"../unity.c", line 483: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.c", line 483: warning: (MISRA-C:2004 10.2/R) The value of an expression of floating type shall not be implicitly converted to a different type if the expression is a function argument
"../unity.c", line 489: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("n")
"../unity.c", line 490: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.c", line 491: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.c", line 492: warning: (MISRA-C:2004 5.6/A) No identifier in one name space should have the same spelling as an identifier in another name space, with the exception of structure member and union member names ("buf")
"../unity.c", line 505: warning: (MISRA-C:2004 12.1/A) Limited dependence should be placed on C's operator precedence rules in expressions
"../unity.c", line 506: warning: (MISRA-C:2004 12.1/A) Limited dependence should be placed on C's operator precedence rules in expressions
"../unity.c", line 512: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("divisor")
"../unity.c", line 514: warning: (MISRA-C:2004 12.1/A) Limited dependence should be placed on C's operator precedence rules in expressions
"../unity.c", line 515: warning: (MISRA-C:2004 12.1/A) Limited dependence should be placed on C's operator precedence rules in expressions
"../unity.c", line 526: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("factor")
"../unity.c", line 536: warning: (MISRA-C:2004 10.4/R) The value of a complex expression of floating type shall only be cast to a floating type that is narrower or of the same size
"../unity.c", line 540: warning: (MISRA-C:2004 12.7/R) Bitwise operators shall not be applied to operands whose underlying type is signed
"../unity.c", line 540: warning: (MISRA-C:2004 13.3/R) Floating-point expressions shall not be tested for equality or inequality
"../unity.c", line 540: warning: (MISRA-C:2004 12.6/A) The operands of logical operators (&&, || and !) should be effectively Boolean
"../unity.c", line 567: warning: (MISRA-C:2004 12.13/A) The increment (++) and decrement (--) operators should not be mixed with other operators in an expression
"../unity.c", line 567: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is complex
"../unity.c", line 567: warning: (MISRA-C:2004 6.2/R) signed and unsigned char type shall be used only for the storage and use of numeric values
"../unity.c", line 567: warning: (MISRA-C:2004 12.1/A) Limited dependence should be placed on C's operator precedence rules in expressions
"../unity.c", line 567: warning: (MISRA-C:2004 6.1/R) The plain char type shall be used only for the storage and use of character values
"../unity.c", line 572: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 573: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 573: warning: (MISRA-C:2004 12.13/A) The increment (++) and decrement (--) operators should not be mixed with other operators in an expression
"../unity.c", line 579: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 583: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 588: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 594: warning: (MISRA-C:2004 12.13/A) The increment (++) and decrement (--) operators should not be mixed with other operators in an expression
"../unity.c", line 594: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is complex
"../unity.c", line 594: warning: (MISRA-C:2004 6.2/R) signed and unsigned char type shall be used only for the storage and use of numeric values
"../unity.c", line 594: warning: (MISRA-C:2004 12.1/A) Limited dependence should be placed on C's operator precedence rules in expressions
"../unity.c", line 594: warning: (MISRA-C:2004 6.1/R) The plain char type shall be used only for the storage and use of character values
"../unity.c", line 599: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 599: warning: (MISRA-C:2004 12.13/A) The increment (++) and decrement (--) operators should not be mixed with other operators in an expression
"../unity.c", line 541: warning: (MISRA-C:2004 14.9/R) An if (expression) construct shall be followed by a compound statement. The else keyword shall be followed by either a compound statement, or another if statement
"../unity.c", line 607: warning: (MISRA-C:2004 8.1/R) Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call
"../unity.c", line 639: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 641: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 643: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 650: warning: (MISRA-C:2004 8.1/R) Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call
"../unity.c", line 654: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 664: warning: (MISRA-C:2004 12.6/A) The operands of logical operators (&&, || and !) should be effectively Boolean
"../unity.c", line 674: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 675: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 677: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 682: warning: (MISRA-C:2004 8.1/R) Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call
"../unity.c", line 705: warning: (MISRA-C:2004 8.1/R) Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call
"../unity.c", line 710: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 712: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 721: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 723: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 732: warning: (MISRA-C:2004 8.1/R) Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call
"../unity.c", line 739: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 741: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 750: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 752: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 765: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.c", line 765: warning: (MISRA-C:2004 8.1/R) Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call
"../unity.c", line 771: warning: (MISRA-C:2004 14.7/R) A function shall have a single point of exit at the end of the function
"../unity.c", line 805: warning: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../unity.c", line 805: warning: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../unity.c", line 805: warning: (MISRA-C:2004 12.6/A) The operands of logical operators (&&, || and !) should be effectively Boolean
"../unity.c", line 807: warning: (MISRA-C:2004 12.7/R) Bitwise operators shall not be applied to operands whose underlying type is signed
"../unity.c", line 807: warning: (MISRA-C:2004 12.7/R) Bitwise operators shall not be applied to operands whose underlying type is signed
"../unity.c", line 815: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 815: warning: (MISRA-C:2004 20.7/R) The setjmp macro and the longjmp function shall not be used
"../unity.c", line 805: warning: (MISRA-C:2004 14.9/R) An if (expression) construct shall be followed by a compound statement. The else keyword shall be followed by either a compound statement, or another if statement
"../unity.c", line 805: warning: (MISRA-C:2004 14.7/R) A function shall have a single point of exit at the end of the function
"../unity.c", line 826: warning: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../unity.c", line 826: warning: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../unity.c", line 826: warning: (MISRA-C:2004 12.6/A) The operands of logical operators (&&, || and !) should be effectively Boolean
"../unity.c", line 836: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 836: warning: (MISRA-C:2004 20.7/R) The setjmp macro and the longjmp function shall not be used
"../unity.c", line 826: warning: (MISRA-C:2004 14.9/R) An if (expression) construct shall be followed by a compound statement. The else keyword shall be followed by either a compound statement, or another if statement
"../unity.c", line 826: warning: (MISRA-C:2004 14.7/R) A function shall have a single point of exit at the end of the function
"../unity.c", line 848: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.c", line 849: warning: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../unity.c", line 849: warning: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../unity.c", line 849: warning: (MISRA-C:2004 12.6/A) The operands of logical operators (&&, || and !) should be effectively Boolean
"../unity.c", line 851: warning: (MISRA-C:2004 12.7/R) Bitwise operators shall not be applied to operands whose underlying type is signed
"../unity.c", line 851: warning: (MISRA-C:2004 12.6/A) The operands of logical operators (&&, || and !) should be effectively Boolean
"../unity.c", line 854: warning: (MISRA-C:2004 12.7/R) Bitwise operators shall not be applied to operands whose underlying type is signed
"../unity.c", line 856: warning: (MISRA-C:2004 12.7/R) Bitwise operators shall not be applied to operands whose underlying type is signed
"../unity.c", line 856: warning: (MISRA-C:2004 12.6/A) The operands of logical operators (&&, || and !) should be effectively Boolean
"../unity.c", line 857: warning: (MISRA-C:2004 12.7/R) Bitwise operators shall not be applied to operands whose underlying type is signed
"../unity.c", line 857: warning: (MISRA-C:2004 12.6/A) The operands of logical operators (&&, || and !) should be effectively Boolean
"../unity.c", line 861: warning: (MISRA-C:2004 12.7/R) Bitwise operators shall not be applied to operands whose underlying type is signed
"../unity.c", line 861: warning: (MISRA-C:2004 12.6/A) The operands of logical operators (&&, || and !) should be effectively Boolean
"../unity.c", line 862: warning: (MISRA-C:2004 12.7/R) Bitwise operators shall not be applied to operands whose underlying type is signed
"../unity.c", line 862: warning: (MISRA-C:2004 12.6/A) The operands of logical operators (&&, || and !) should be effectively Boolean
"../unity.c", line 870: warning: (MISRA-C:2004 12.7/R) Bitwise operators shall not be applied to operands whose underlying type is signed
"../unity.c", line 871: warning: (MISRA-C:2004 12.7/R) Bitwise operators shall not be applied to operands whose underlying type is signed
"../unity.c", line 872: warning: (MISRA-C:2004 12.7/R) Bitwise operators shall not be applied to operands whose underlying type is signed
"../unity.c", line 875: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 875: warning: (MISRA-C:2004 20.7/R) The setjmp macro and the longjmp function shall not be used
"../unity.c", line 849: warning: (MISRA-C:2004 14.9/R) An if (expression) construct shall be followed by a compound statement. The else keyword shall be followed by either a compound statement, or another if statement
"../unity.c", line 849: warning: (MISRA-C:2004 14.7/R) A function shall have a single point of exit at the end of the function
"../unity.c", line 879: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.c", line 879: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.c", line 893: warning: (MISRA-C:2004 5.6/A) No identifier in one name space should have the same spelling as an identifier in another name space, with the exception of structure member and union member names ("flags")
"../unity.c", line 893: warning: (MISRA-C:2004 5.6/A) No identifier in one name space should have the same spelling as an identifier in another name space, with the exception of structure member and union member names ("flags")
"../unity.c", line 896: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.c", line 896: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("length")
"../unity.c", line 896: warning: (MISRA-C:2004 12.7/R) Bitwise operators shall not be applied to operands whose underlying type is signed
"../unity.c", line 896: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is complex
"../unity.c", line 897: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.c", line 897: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 899: warning: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../unity.c", line 899: warning: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../unity.c", line 899: warning: (MISRA-C:2004 12.6/A) The operands of logical operators (&&, || and !) should be effectively Boolean
"../unity.c", line 901: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 903: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 903: warning: (MISRA-C:2004 20.7/R) The setjmp macro and the longjmp function shall not be used
"../unity.c", line 913: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 913: warning: (MISRA-C:2004 20.7/R) The setjmp macro and the longjmp function shall not be used
"../unity.c", line 916: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 916: warning: (MISRA-C:2004 12.13/A) The increment (++) and decrement (--) operators should not be mixed with other operators in an expression
"../unity.c", line 916: warning: (MISRA-C:2004 12.4/R) The right-hand operand of a logical && or || operator shall not contain side effects
"../unity.c", line 916: warning: (MISRA-C:2004 12.6/A) The operands of logical operators (&&, || and !) should be effectively Boolean
"../unity.c", line 923: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 929: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 944: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 948: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 954: warning: (MISRA-C:2004 12.7/R) Bitwise operators shall not be applied to operands whose underlying type is signed
"../unity.c", line 954: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 954: warning: (MISRA-C:2004 12.6/A) The operands of logical operators (&&, || and !) should be effectively Boolean
"../unity.c", line 956: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("mask")
"../unity.c", line 957: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 957: warning: (MISRA-C:2004 12.7/R) Bitwise operators shall not be applied to operands whose underlying type is signed
"../unity.c", line 957: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 957: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is complex
"../unity.c", line 957: warning: (MISRA-C:2004 12.1/A) Limited dependence should be placed on C's operator precedence rules in expressions
"../unity.c", line 958: warning: (MISRA-C:2004 12.7/R) Bitwise operators shall not be applied to operands whose underlying type is signed
"../unity.c", line 959: warning: (MISRA-C:2004 12.7/R) Bitwise operators shall not be applied to operands whose underlying type is signed
"../unity.c", line 963: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 969: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 969: warning: (MISRA-C:2004 20.7/R) The setjmp macro and the longjmp function shall not be used
"../unity.c", line 974: warning: (MISRA-C:2004 17.4/R) Array indexing shall be the only allowed form of pointer arithmetic
"../unity.c", line 976: warning: (MISRA-C:2004 17.4/R) Array indexing shall be the only allowed form of pointer arithmetic
"../unity.c", line 899: warning: (MISRA-C:2004 14.9/R) An if (expression) construct shall be followed by a compound statement. The else keyword shall be followed by either a compound statement, or another if statement
"../unity.c", line 899: warning: (MISRA-C:2004 14.7/R) A function shall have a single point of exit at the end of the function
"../unity.c", line 983: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.c", line 983: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.c", line 992: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.c", line 998: warning: (MISRA-C:2004 19.7/A) A function should be used in preference to a function-like macro
"../unity.c", line 998: warning: (MISRA-C:2004 19.4/R) C macros shall only expand to a braced initialiser, a constant, a string literal, a parenthesised expression, a type qualifier, a storage class specifier, or a do-while-zero construct
"../unity.c", line 1010: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.c", line 1010: warning: (MISRA-C:2004 8.1/R) Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call
"../unity.c", line 1013: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.c", line 1013: warning: (MISRA-C:2004 10.2/R) The value of an expression of floating type shall not be implicitly converted to a different type if the expression is a function argument
"../unity.c", line 1013: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.c", line 1013: warning: (MISRA-C:2004 10.2/R) The value of an expression of floating type shall not be implicitly converted to a different type if the expression is a function argument
"../unity.c", line 1013: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.c", line 1013: warning: (MISRA-C:2004 10.2/R) The value of an expression of floating type shall not be implicitly converted to a different type if the expression is a function argument
"../unity.c", line 1013: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.c", line 1013: warning: (MISRA-C:2004 10.2/R) The value of an expression of floating type shall not be implicitly converted to a different type if the expression is a function argument
"../unity.c", line 1013: warning: (MISRA-C:2004 12.4/R) The right-hand operand of a logical && or || operator shall not contain side effects
"../unity.c", line 1013: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1013: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1013: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.c", line 1013: warning: (MISRA-C:2004 10.2/R) The value of an expression of floating type shall not be implicitly converted to a different type if the expression is a function argument
"../unity.c", line 1013: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.c", line 1013: warning: (MISRA-C:2004 10.2/R) The value of an expression of floating type shall not be implicitly converted to a different type if the expression is a function argument
"../unity.c", line 1013: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.c", line 1013: warning: (MISRA-C:2004 10.2/R) The value of an expression of floating type shall not be implicitly converted to a different type if the expression is a function argument
"../unity.c", line 1013: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.c", line 1013: warning: (MISRA-C:2004 10.2/R) The value of an expression of floating type shall not be implicitly converted to a different type if the expression is a function argument
"../unity.c", line 1013: warning: (MISRA-C:2004 12.4/R) The right-hand operand of a logical && or || operator shall not contain side effects
"../unity.c", line 1013: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1013: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1013: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.c", line 1013: warning: (MISRA-C:2004 10.2/R) The value of an expression of floating type shall not be implicitly converted to a different type if the expression is a function argument
"../unity.c", line 1013: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.c", line 1013: warning: (MISRA-C:2004 10.2/R) The value of an expression of floating type shall not be implicitly converted to a different type if the expression is a function argument
"../unity.c", line 1013: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.c", line 1013: warning: (MISRA-C:2004 10.2/R) The value of an expression of floating type shall not be implicitly converted to a different type if the expression is a function argument
"../unity.c", line 1013: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.c", line 1013: warning: (MISRA-C:2004 10.2/R) The value of an expression of floating type shall not be implicitly converted to a different type if the expression is a function argument
"../unity.c", line 1013: warning: (MISRA-C:2004 12.4/R) The right-hand operand of a logical && or || operator shall not contain side effects
"../unity.c", line 1013: warning: (MISRA-C:2004 10.2/R) The value of an expression of floating type shall not be implicitly converted to a different type if the expression is a return expression
"../unity.c", line 1013: warning: (MISRA-C:2004 14.9/R) An if (expression) construct shall be followed by a compound statement. The else keyword shall be followed by either a compound statement, or another if statement
"../unity.c", line 1013: warning: (MISRA-C:2004 14.9/R) An if (expression) construct shall be followed by a compound statement. The else keyword shall be followed by either a compound statement, or another if statement
"../unity.c", line 1013: warning: (MISRA-C:2004 14.9/R) An if (expression) construct shall be followed by a compound statement. The else keyword shall be followed by either a compound statement, or another if statement
"../unity.c", line 1013: warning: (MISRA-C:2004 14.9/R) An if (expression) construct shall be followed by a compound statement. The else keyword shall be followed by either a compound statement, or another if statement
"../unity.c", line 1013: warning: (MISRA-C:2004 14.7/R) A function shall have a single point of exit at the end of the function
"../unity.c", line 1022: warning: (MISRA-C:2004 5.6/A) No identifier in one name space should have the same spelling as an identifier in another name space, with the exception of structure member and union member names ("flags")
"../unity.c", line 1022: warning: (MISRA-C:2004 5.6/A) No identifier in one name space should have the same spelling as an identifier in another name space, with the exception of structure member and union member names ("flags")
"../unity.c", line 1024: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("elements")
"../unity.c", line 1028: warning: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../unity.c", line 1028: warning: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../unity.c", line 1028: warning: (MISRA-C:2004 12.6/A) The operands of logical operators (&&, || and !) should be effectively Boolean
"../unity.c", line 1030: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1032: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1032: warning: (MISRA-C:2004 20.7/R) The setjmp macro and the longjmp function shall not be used
"../unity.c", line 1042: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1042: warning: (MISRA-C:2004 20.7/R) The setjmp macro and the longjmp function shall not be used
"../unity.c", line 1045: warning: (MISRA-C:2004 12.13/A) The increment (++) and decrement (--) operators should not be mixed with other operators in an expression
"../unity.c", line 1051: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1054: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1054: warning: (MISRA-C:2004 20.7/R) The setjmp macro and the longjmp function shall not be used
"../unity.c", line 1058: warning: (MISRA-C:2004 17.4/R) Array indexing shall be the only allowed form of pointer arithmetic
"../unity.c", line 1060: warning: (MISRA-C:2004 17.4/R) Array indexing shall be the only allowed form of pointer arithmetic
"../unity.c", line 1028: warning: (MISRA-C:2004 14.9/R) An if (expression) construct shall be followed by a compound statement. The else keyword shall be followed by either a compound statement, or another if statement
"../unity.c", line 1028: warning: (MISRA-C:2004 14.7/R) A function shall have a single point of exit at the end of the function
"../unity.c", line 1071: warning: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../unity.c", line 1071: warning: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../unity.c", line 1071: warning: (MISRA-C:2004 12.6/A) The operands of logical operators (&&, || and !) should be effectively Boolean
"../unity.c", line 1079: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1079: warning: (MISRA-C:2004 20.7/R) The setjmp macro and the longjmp function shall not be used
"../unity.c", line 1071: warning: (MISRA-C:2004 14.9/R) An if (expression) construct shall be followed by a compound statement. The else keyword shall be followed by either a compound statement, or another if statement
"../unity.c", line 1071: warning: (MISRA-C:2004 14.7/R) A function shall have a single point of exit at the end of the function
"../unity.c", line 1090: warning: (MISRA-C:2004 12.7/R) Bitwise operators shall not be applied to operands whose underlying type is signed
"../unity.c", line 1092: warning: (MISRA-C:2004 12.7/R) Bitwise operators shall not be applied to operands whose underlying type is signed
"../unity.c", line 1094: warning: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../unity.c", line 1094: warning: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../unity.c", line 1094: warning: (MISRA-C:2004 12.6/A) The operands of logical operators (&&, || and !) should be effectively Boolean
"../unity.c", line 1100: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.c", line 1100: warning: (MISRA-C:2004 10.2/R) The value of an expression of floating type shall not be implicitly converted to a different type if the expression is a function argument
"../unity.c", line 1100: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.c", line 1100: warning: (MISRA-C:2004 10.2/R) The value of an expression of floating type shall not be implicitly converted to a different type if the expression is a function argument
"../unity.c", line 1100: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1100: warning: (MISRA-C:2004 10.2/R) The value of an expression of floating type shall not be implicitly converted to a different type if the expression is complex
"../unity.c", line 1104: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.c", line 1104: warning: (MISRA-C:2004 10.2/R) The value of an expression of floating type shall not be implicitly converted to a different type if the expression is a function argument
"../unity.c", line 1104: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.c", line 1104: warning: (MISRA-C:2004 10.2/R) The value of an expression of floating type shall not be implicitly converted to a different type if the expression is a function argument
"../unity.c", line 1104: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1104: warning: (MISRA-C:2004 10.2/R) The value of an expression of floating type shall not be implicitly converted to a different type if the expression is complex
"../unity.c", line 1109: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.c", line 1109: warning: (MISRA-C:2004 10.2/R) The value of an expression of floating type shall not be implicitly converted to a different type if the expression is a function argument
"../unity.c", line 1109: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.c", line 1109: warning: (MISRA-C:2004 10.2/R) The value of an expression of floating type shall not be implicitly converted to a different type if the expression is a function argument
"../unity.c", line 1114: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.c", line 1114: warning: (MISRA-C:2004 10.2/R) The value of an expression of floating type shall not be implicitly converted to a different type if the expression is a function argument
"../unity.c", line 1114: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.c", line 1114: warning: (MISRA-C:2004 10.2/R) The value of an expression of floating type shall not be implicitly converted to a different type if the expression is a function argument
"../unity.c", line 1114: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.c", line 1114: warning: (MISRA-C:2004 10.2/R) The value of an expression of floating type shall not be implicitly converted to a different type if the expression is a function argument
"../unity.c", line 1114: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.c", line 1114: warning: (MISRA-C:2004 10.2/R) The value of an expression of floating type shall not be implicitly converted to a different type if the expression is a function argument
"../unity.c", line 1114: warning: (MISRA-C:2004 12.4/R) The right-hand operand of a logical && or || operator shall not contain side effects
"../unity.c", line 1114: warning: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../unity.c", line 1114: warning: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../unity.c", line 1143: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1143: warning: (MISRA-C:2004 20.7/R) The setjmp macro and the longjmp function shall not be used
"../unity.c", line 1094: warning: (MISRA-C:2004 14.9/R) An if (expression) construct shall be followed by a compound statement. The else keyword shall be followed by either a compound statement, or another if statement
"../unity.c", line 1094: warning: (MISRA-C:2004 14.7/R) A function shall have a single point of exit at the end of the function
"../unity.c", line 1297: warning: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../unity.c", line 1297: warning: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../unity.c", line 1297: warning: (MISRA-C:2004 12.6/A) The operands of logical operators (&&, || and !) should be effectively Boolean
"../unity.c", line 1299: warning: (MISRA-C:2004 12.7/R) Bitwise operators shall not be applied to operands whose underlying type is signed
"../unity.c", line 1303: warning: (MISRA-C:2004 12.6/A) Expressions that are effectively Boolean should not be used in operations with expressions that are not effectively Boolean
"../unity.c", line 1307: warning: (MISRA-C:2004 12.6/A) Expressions that are effectively Boolean should not be used in operations with expressions that are not effectively Boolean
"../unity.c", line 1314: warning: (MISRA-C:2004 12.6/A) Expressions that are effectively Boolean should not be used in operations with expressions that are not effectively Boolean
"../unity.c", line 1318: warning: (MISRA-C:2004 12.6/A) Expressions that are effectively Boolean should not be used in operations with expressions that are not effectively Boolean
"../unity.c", line 1332: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1332: warning: (MISRA-C:2004 20.7/R) The setjmp macro and the longjmp function shall not be used
"../unity.c", line 1297: warning: (MISRA-C:2004 14.9/R) An if (expression) construct shall be followed by a compound statement. The else keyword shall be followed by either a compound statement, or another if statement
"../unity.c", line 1297: warning: (MISRA-C:2004 14.7/R) A function shall have a single point of exit at the end of the function
"../unity.c", line 1344: warning: (MISRA-C:2004 5.6/A) No identifier in one name space should have the same spelling as an identifier in another name space, with the exception of structure member and union member names ("flags")
"../unity.c", line 1344: warning: (MISRA-C:2004 5.6/A) No identifier in one name space should have the same spelling as an identifier in another name space, with the exception of structure member and union member names ("flags")
"../unity.c", line 1346: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("elements")
"../unity.c", line 1347: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.c", line 1347: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("length")
"../unity.c", line 1347: warning: (MISRA-C:2004 12.7/R) Bitwise operators shall not be applied to operands whose underlying type is signed
"../unity.c", line 1347: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is complex
"../unity.c", line 1348: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.c", line 1348: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("increment")
"../unity.c", line 1348: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1350: warning: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../unity.c", line 1350: warning: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../unity.c", line 1350: warning: (MISRA-C:2004 12.6/A) The operands of logical operators (&&, || and !) should be effectively Boolean
"../unity.c", line 1352: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1354: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1354: warning: (MISRA-C:2004 20.7/R) The setjmp macro and the longjmp function shall not be used
"../unity.c", line 1364: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1364: warning: (MISRA-C:2004 20.7/R) The setjmp macro and the longjmp function shall not be used
"../unity.c", line 1367: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1367: warning: (MISRA-C:2004 12.13/A) The increment (++) and decrement (--) operators should not be mixed with other operators in an expression
"../unity.c", line 1367: warning: (MISRA-C:2004 12.4/R) The right-hand operand of a logical && or || operator shall not contain side effects
"../unity.c", line 1367: warning: (MISRA-C:2004 12.6/A) The operands of logical operators (&&, || and !) should be effectively Boolean
"../unity.c", line 1369: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("expect_val")
"../unity.c", line 1370: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("actual_val")
"../unity.c", line 1374: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1380: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1395: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1399: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1403: warning: (MISRA-C:2004 12.7/R) Bitwise operators shall not be applied to operands whose underlying type is signed
"../unity.c", line 1407: warning: (MISRA-C:2004 12.6/A) Expressions that are effectively Boolean should not be used in operations with expressions that are not effectively Boolean
"../unity.c", line 1411: warning: (MISRA-C:2004 12.6/A) Expressions that are effectively Boolean should not be used in operations with expressions that are not effectively Boolean
"../unity.c", line 1418: warning: (MISRA-C:2004 12.6/A) Expressions that are effectively Boolean should not be used in operations with expressions that are not effectively Boolean
"../unity.c", line 1422: warning: (MISRA-C:2004 12.6/A) Expressions that are effectively Boolean should not be used in operations with expressions that are not effectively Boolean
"../unity.c", line 1428: warning: (MISRA-C:2004 12.7/R) Bitwise operators shall not be applied to operands whose underlying type is signed
"../unity.c", line 1428: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1428: warning: (MISRA-C:2004 12.6/A) The operands of logical operators (&&, || and !) should be effectively Boolean
"../unity.c", line 1430: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("mask")
"../unity.c", line 1431: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1431: warning: (MISRA-C:2004 12.7/R) Bitwise operators shall not be applied to operands whose underlying type is signed
"../unity.c", line 1431: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1431: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if the expression is complex
"../unity.c", line 1431: warning: (MISRA-C:2004 12.1/A) Limited dependence should be placed on C's operator precedence rules in expressions
"../unity.c", line 1432: warning: (MISRA-C:2004 12.7/R) Bitwise operators shall not be applied to operands whose underlying type is signed
"../unity.c", line 1433: warning: (MISRA-C:2004 12.7/R) Bitwise operators shall not be applied to operands whose underlying type is signed
"../unity.c", line 1439: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1445: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1445: warning: (MISRA-C:2004 20.7/R) The setjmp macro and the longjmp function shall not be used
"../unity.c", line 1450: warning: (MISRA-C:2004 17.4/R) Array indexing shall be the only allowed form of pointer arithmetic
"../unity.c", line 1452: warning: (MISRA-C:2004 17.4/R) Array indexing shall be the only allowed form of pointer arithmetic
"../unity.c", line 1350: warning: (MISRA-C:2004 14.9/R) An if (expression) construct shall be followed by a compound statement. The else keyword shall be followed by either a compound statement, or another if statement
"../unity.c", line 1350: warning: (MISRA-C:2004 14.7/R) A function shall have a single point of exit at the end of the function
"../unity.c", line 1462: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("i")
"../unity.c", line 1464: warning: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../unity.c", line 1464: warning: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../unity.c", line 1464: warning: (MISRA-C:2004 12.6/A) The operands of logical operators (&&, || and !) should be effectively Boolean
"../unity.c", line 1469: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1469: warning: (MISRA-C:2004 17.4/R) Array indexing shall be the only allowed form of pointer arithmetic
"../unity.c", line 1469: warning: (MISRA-C:2004 17.4/R) Array indexing shall be the only allowed form of pointer arithmetic
"../unity.c", line 1469: warning: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../unity.c", line 1469: warning: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../unity.c", line 1469: warning: (MISRA-C:2004 12.6/A) The operands of logical operators (&&, || and !) should be effectively Boolean
"../unity.c", line 1469: warning: (MISRA-C:2004 6.1/R) The plain char type shall be used only for the storage and use of character values
"../unity.c", line 1471: warning: (MISRA-C:2004 17.4/R) Array indexing shall be the only allowed form of pointer arithmetic
"../unity.c", line 1471: warning: (MISRA-C:2004 17.4/R) Array indexing shall be the only allowed form of pointer arithmetic
"../unity.c", line 1473: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1482: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1491: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1491: warning: (MISRA-C:2004 20.7/R) The setjmp macro and the longjmp function shall not be used
"../unity.c", line 1464: warning: (MISRA-C:2004 14.9/R) An if (expression) construct shall be followed by a compound statement. The else keyword shall be followed by either a compound statement, or another if statement
"../unity.c", line 1464: warning: (MISRA-C:2004 14.7/R) A function shall have a single point of exit at the end of the function
"../unity.c", line 1502: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("i")
"../unity.c", line 1504: warning: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../unity.c", line 1504: warning: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../unity.c", line 1504: warning: (MISRA-C:2004 12.6/A) The operands of logical operators (&&, || and !) should be effectively Boolean
"../unity.c", line 1509: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1509: warning: (MISRA-C:2004 17.4/R) Array indexing shall be the only allowed form of pointer arithmetic
"../unity.c", line 1509: warning: (MISRA-C:2004 17.4/R) Array indexing shall be the only allowed form of pointer arithmetic
"../unity.c", line 1509: warning: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../unity.c", line 1509: warning: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../unity.c", line 1509: warning: (MISRA-C:2004 12.6/A) The operands of logical operators (&&, || and !) should be effectively Boolean
"../unity.c", line 1509: warning: (MISRA-C:2004 6.1/R) The plain char type shall be used only for the storage and use of character values
"../unity.c", line 1511: warning: (MISRA-C:2004 17.4/R) Array indexing shall be the only allowed form of pointer arithmetic
"../unity.c", line 1511: warning: (MISRA-C:2004 17.4/R) Array indexing shall be the only allowed form of pointer arithmetic
"../unity.c", line 1513: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1522: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1531: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1531: warning: (MISRA-C:2004 20.7/R) The setjmp macro and the longjmp function shall not be used
"../unity.c", line 1504: warning: (MISRA-C:2004 14.9/R) An if (expression) construct shall be followed by a compound statement. The else keyword shall be followed by either a compound statement, or another if statement
"../unity.c", line 1504: warning: (MISRA-C:2004 14.7/R) A function shall have a single point of exit at the end of the function
"../unity.c", line 1541: warning: (MISRA-C:2004 5.6/A) No identifier in one name space should have the same spelling as an identifier in another name space, with the exception of structure member and union member names ("flags")
"../unity.c", line 1541: warning: (MISRA-C:2004 5.6/A) No identifier in one name space should have the same spelling as an identifier in another name space, with the exception of structure member and union member names ("flags")
"../unity.c", line 1543: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("i")
"../unity.c", line 1543: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1544: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1545: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1546: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1548: warning: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../unity.c", line 1548: warning: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../unity.c", line 1548: warning: (MISRA-C:2004 12.6/A) The operands of logical operators (&&, || and !) should be effectively Boolean
"../unity.c", line 1551: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1553: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1553: warning: (MISRA-C:2004 20.7/R) The setjmp macro and the longjmp function shall not be used
"../unity.c", line 1563: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1563: warning: (MISRA-C:2004 20.7/R) The setjmp macro and the longjmp function shall not be used
"../unity.c", line 1573: warning: (MISRA-C:2004 17.4/R) Array indexing shall be the only allowed form of pointer arithmetic
"../unity.c", line 1576: warning: (MISRA-C:2004 17.4/R) Array indexing shall be the only allowed form of pointer arithmetic
"../unity.c", line 1582: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1582: warning: (MISRA-C:2004 17.4/R) Array indexing shall be the only allowed form of pointer arithmetic
"../unity.c", line 1582: warning: (MISRA-C:2004 17.4/R) Array indexing shall be the only allowed form of pointer arithmetic
"../unity.c", line 1582: warning: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../unity.c", line 1582: warning: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../unity.c", line 1582: warning: (MISRA-C:2004 12.6/A) The operands of logical operators (&&, || and !) should be effectively Boolean
"../unity.c", line 1582: warning: (MISRA-C:2004 6.1/R) The plain char type shall be used only for the storage and use of character values
"../unity.c", line 1584: warning: (MISRA-C:2004 17.4/R) Array indexing shall be the only allowed form of pointer arithmetic
"../unity.c", line 1584: warning: (MISRA-C:2004 17.4/R) Array indexing shall be the only allowed form of pointer arithmetic
"../unity.c", line 1586: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1595: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1602: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1609: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1609: warning: (MISRA-C:2004 20.7/R) The setjmp macro and the longjmp function shall not be used
"../unity.c", line 1611: warning: (MISRA-C:2004 12.13/A) The increment (++) and decrement (--) operators should not be mixed with other operators in an expression
"../unity.c", line 1548: warning: (MISRA-C:2004 14.9/R) An if (expression) construct shall be followed by a compound statement. The else keyword shall be followed by either a compound statement, or another if statement
"../unity.c", line 1548: warning: (MISRA-C:2004 14.7/R) A function shall have a single point of exit at the end of the function
"../unity.c", line 1621: warning: (MISRA-C:2004 5.6/A) No identifier in one name space should have the same spelling as an identifier in another name space, with the exception of structure member and union member names ("flags")
"../unity.c", line 1621: warning: (MISRA-C:2004 5.6/A) No identifier in one name space should have the same spelling as an identifier in another name space, with the exception of structure member and union member names ("flags")
"../unity.c", line 1625: warning: (MISRA-C:2004 5.7/A) No identifier name should be reused ("elements")
"../unity.c", line 1628: warning: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../unity.c", line 1628: warning: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../unity.c", line 1628: warning: (MISRA-C:2004 12.6/A) The operands of logical operators (&&, || and !) should be effectively Boolean
"../unity.c", line 1630: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1630: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1632: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1632: warning: (MISRA-C:2004 20.7/R) The setjmp macro and the longjmp function shall not be used
"../unity.c", line 1642: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1642: warning: (MISRA-C:2004 20.7/R) The setjmp macro and the longjmp function shall not be used
"../unity.c", line 1645: warning: (MISRA-C:2004 12.13/A) The increment (++) and decrement (--) operators should not be mixed with other operators in an expression
"../unity.c", line 1648: warning: (MISRA-C:2004 12.13/A) The increment (++) and decrement (--) operators should not be mixed with other operators in an expression
"../unity.c", line 1654: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1657: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1660: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1666: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1666: warning: (MISRA-C:2004 20.7/R) The setjmp macro and the longjmp function shall not be used
"../unity.c", line 1668: warning: (MISRA-C:2004 17.4/R) Array indexing shall be the only allowed form of pointer arithmetic
"../unity.c", line 1669: warning: (MISRA-C:2004 17.4/R) Array indexing shall be the only allowed form of pointer arithmetic
"../unity.c", line 1628: warning: (MISRA-C:2004 14.9/R) An if (expression) construct shall be followed by a compound statement. The else keyword shall be followed by either a compound statement, or another if statement
"../unity.c", line 1628: warning: (MISRA-C:2004 14.7/R) A function shall have a single point of exit at the end of the function
"../unity.c", line 1680: warning: (MISRA-C:2004 18.4/R) Unions shall not be used
"../unity.c", line 1689: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.c", line 1700: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1704: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1700: warning: (MISRA-C:2004 15.2/R) An unconditional break statement shall terminate every non-empty switch clause
"../unity.c", line 1704: warning: (MISRA-C:2004 15.2/R) An unconditional break statement shall terminate every non-empty switch clause
"../unity.c", line 1714: warning: (MISRA-C:2004 15.2/R) An unconditional break statement shall terminate every non-empty switch clause
"../unity.c", line 1722: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.c", line 1743: warning: (MISRA-C:2004 16.4/R) The identifiers used in the declaration and definition of a function shall be identical
"../unity.c", line 1745: warning: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../unity.c", line 1745: warning: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../unity.c", line 1745: warning: (MISRA-C:2004 12.6/A) The operands of logical operators (&&, || and !) should be effectively Boolean
"../unity.c", line 1751: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 1766: warning: (MISRA-C:2004 17.4/R) Array indexing shall be the only allowed form of pointer arithmetic
"../unity.c", line 1766: warning: (MISRA-C:2004 6.1/R) The plain char type shall be used only for the storage and use of character values
"../unity.c", line 1768: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 1773: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1773: warning: (MISRA-C:2004 20.7/R) The setjmp macro and the longjmp function shall not be used
"../unity.c", line 1745: warning: (MISRA-C:2004 14.9/R) An if (expression) construct shall be followed by a compound statement. The else keyword shall be followed by either a compound statement, or another if statement
"../unity.c", line 1745: warning: (MISRA-C:2004 14.7/R) A function shall have a single point of exit at the end of the function
"../unity.c", line 1777: warning: (MISRA-C:2004 16.4/R) The identifiers used in the declaration and definition of a function shall be identical
"../unity.c", line 1779: warning: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../unity.c", line 1779: warning: (MISRA-C:2004 12.5/R) The operands of a logical && or || shall be primary-expressions
"../unity.c", line 1779: warning: (MISRA-C:2004 12.6/A) The operands of logical operators (&&, || and !) should be effectively Boolean
"../unity.c", line 1785: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 1786: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 1789: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1789: warning: (MISRA-C:2004 20.7/R) The setjmp macro and the longjmp function shall not be used
"../unity.c", line 1779: warning: (MISRA-C:2004 14.9/R) An if (expression) construct shall be followed by a compound statement. The else keyword shall be followed by either a compound statement, or another if statement
"../unity.c", line 1779: warning: (MISRA-C:2004 14.7/R) A function shall have a single point of exit at the end of the function
"../unity.c", line 1793: warning: (MISRA-C:2004 16.4/R) The identifiers used in the declaration and definition of a function shall be identical
"../unity.c", line 1799: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 1800: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 1803: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 1807: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.c", line 1809: warning: (MISRA-C:2004 17.6/R) The address of an object with automatic storage shall not be assigned to another object that may persist after the first object has ceased to exist ("FuncName")
"../unity.c", line 1812: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1812: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1814: warning: (MISRA-C:2004 20.7/R) The setjmp macro and the longjmp function shall not be used
"../unity.c", line 1819: warning: (MISRA-C:2004 20.7/R) The setjmp macro and the longjmp function shall not be used
"../unity.c", line 1830: warning: (MISRA-C:2004 17.6/R) The address of an object with automatic storage shall not be assigned to another object that may persist after the first object has ceased to exist ("filename")
"../unity.c", line 1831: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1832: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1833: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1834: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1835: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1836: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1837: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1839: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1839: warning: (MISRA-C:2004 10.1/R) The value of an expression of integer type shall not be implicitly converted to a different underlying type if it is not a conversion to a wider integer type of the same signedness
"../unity.c", line 1844: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.c", line 1846: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 1848: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 1855: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 1867: warning: (MISRA-C:2004 20.9/R) The input/output library <stdio.h> shall not be used in production code ("putchar")
"../unity.c", line 1870: warning: (MISRA-C:2004 6.3/A) typedefs that indicate size and signedness should be used in place of the basic numerical types
"../unity.c", line 43: warning: (MISRA-C:2004 8.7/R) Objects shall be defined at block scope if they are only accessed from within a single function (variable "UnityStrGt")
"../unity.c", line 44: warning: (MISRA-C:2004 8.7/R) Objects shall be defined at block scope if they are only accessed from within a single function (variable "UnityStrLt")
"../unity.c", line 45: warning: (MISRA-C:2004 8.7/R) Objects shall be defined at block scope if they are only accessed from within a single function (variable "UnityStrOrEqual")
"../unity.c", line 47: warning: (MISRA-C:2004 8.7/R) Objects shall be defined at block scope if they are only accessed from within a single function (variable "UnityStrByte")
"../unity.c", line 48: warning: (MISRA-C:2004 8.7/R) Objects shall be defined at block scope if they are only accessed from within a single function (variable "UnityStrMemory")
"../unity.c", line 51: warning: (MISRA-C:2004 8.7/R) Objects shall be defined at block scope if they are only accessed from within a single function (variable "UnityStrNullPointerForExpected")
"../unity.c", line 52: warning: (MISRA-C:2004 8.7/R) Objects shall be defined at block scope if they are only accessed from within a single function (variable "UnityStrNullPointerForActual")
"../unity.c", line 54: warning: (MISRA-C:2004 8.7/R) Objects shall be defined at block scope if they are only accessed from within a single function (variable "UnityStrNot")
"../unity.c", line 55: warning: (MISRA-C:2004 8.7/R) Objects shall be defined at block scope if they are only accessed from within a single function (variable "UnityStrInf")
"../unity.c", line 56: warning: (MISRA-C:2004 8.7/R) Objects shall be defined at block scope if they are only accessed from within a single function (variable "UnityStrNegInf")
"../unity.c", line 57: warning: (MISRA-C:2004 8.7/R) Objects shall be defined at block scope if they are only accessed from within a single function (variable "UnityStrNaN")
"../unity.c", line 58: warning: (MISRA-C:2004 8.7/R) Objects shall be defined at block scope if they are only accessed from within a single function (variable "UnityStrDet")
"../unity.c", line 59: warning: (MISRA-C:2004 8.7/R) Objects shall be defined at block scope if they are only accessed from within a single function (variable "UnityStrInvalidFloatTrait")
"../unity.c", line 65: warning: (MISRA-C:2004 8.7/R) Objects shall be defined at block scope if they are only accessed from within a single function (variable "UnityStrBreaker")
"../unity.c", line 66: warning: (MISRA-C:2004 8.7/R) Objects shall be defined at block scope if they are only accessed from within a single function (variable "UnityStrResultsTests")
"../unity.c", line 67: warning: (MISRA-C:2004 8.7/R) Objects shall be defined at block scope if they are only accessed from within a single function (variable "UnityStrResultsFailures")
"../unity.c", line 68: warning: (MISRA-C:2004 8.7/R) Objects shall be defined at block scope if they are only accessed from within a single function (variable "UnityStrResultsIgnored")
 

14:39:03 Build Finished (took 4s.614ms)
